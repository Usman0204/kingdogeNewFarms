{"version":3,"sources":["state/application/hooks.ts","utils/compoundApyHelpers.ts","state/farms/hooks.ts","hooks/useDebounce.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","utils/contenthashToUri.ts","utils/ENS/parseENSAddress.ts","utils/uriToHttp.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","assets/svg/icon/MenuOpenIcon.svg","hooks/useEagerConnect.ts","state/block/hooks.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","assets/svg/icon/WalletIcon.svg","assets/svg/icon/TwitterIcon.svg","assets/svg/icon/SocialIcon2.svg","assets/svg/icon/TelegramIcon.svg","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/index.tsx","state/profile/hooks.ts","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","routerHistory.ts","contexts/Localization/translationsContext.ts","hooks/useI18n.ts","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","hooks/usePreviousValue.ts","hooks/useLastUpdated.ts","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/hooks/useWithdrawalFeeTimer.ts","utils/getTimePeriods.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/useTheme.ts","config/constants/farms.ts","state/lists/hooks.ts","components/Tags.tsx","state/user/hooks/helpers.ts","state/transactions/actions.ts","config/constants/nfts.ts","state/teams/index.tsx","hooks/useRefresh.ts","utils/calls/farms.ts","state/block/index.ts","utils/getRpcUrl.ts","state/application/actions.ts","hooks/useAuth.ts","utils/wallet.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","utils/web3React.ts","config/localization/languages.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/teams/helpers.ts","config/constants/teams.ts","components/ConnectWalletButton.tsx","components/TokenImage/index.tsx","config/constants/meta.ts","components/Layout/Page.tsx","config/constants/ifo.ts","components/Layout/Container.tsx","components/ApyCalculatorModal/index.tsx","utils/bigNumber.ts","utils/collectibles.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","state/user/hooks/index.tsx","state/user/hooks/useUserAddedTokens.ts","hooks/Tokens.ts","utils/formatBalance.ts","config/constants/tokens.ts","hooks/useActiveWeb3React.ts","hooks/usePersistState.ts","utils/latinise.ts","utils/contractHelpers.ts","components/PageHeader/PageHeader.tsx","config/constants/types.ts","utils/farmHelpers.ts","utils/apr.ts","utils/multicall.ts","components/Balance.tsx","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchInput/SearchInput.tsx","config/abi/erc20.ts","config/constants/multicall/index.ts","hooks/useContract.ts","state/types.ts","state/predictions/helpers.ts","config/constants/endpoints.ts","state/predictions/queries.ts","state/predictions/index.ts","config/constants/campaigns.ts","state/achievements/index.ts","state/collectibles/index.ts","state/voting/helpers.ts","state/voting/index.tsx","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/swap/actions.ts","state/transactions/reducer.ts","state/mint/actions.ts","state/swap/reducer.ts","state/burn/actions.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/index.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","views/Pools/helpers.tsx","config/constants/lists.ts","state/user/actions.ts","state/multicall/actions.ts","config/constants/pools.ts","config/constants/index.ts","hooks/useToast.ts","utils/providers.ts","state/lists/actions.ts","utils/index.ts"],"names":["useBlockNumber","chainId","useActiveWeb3React","useSelector","state","application","blockNumber","useMenuToggle","dispatch","useDispatch","menuToggled","toggleMenu","open","_toggleMenu","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","usePollFarmsData","includeArchive","useAppDispatch","useRefresh","slowRefresh","useWeb3React","account","useEffect","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","farms","useFarmFromPid","data","find","f","useFarmUser","farm","allowance","userData","BigNumber","BIG_ZERO","tokenBalance","stakedBalance","earnings","useLpTokenPrice","symbol","lpSymbol","farmTokenPriceInUsd","token","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","times","tokenAmountTotal","totalLpTokens","getBalanceAmount","div","usePriceCakeBusd","cakeBnbFarm","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","useCallback","addEventListener","removeEventListener","Updater","library","windowVisible","setState","blockNumberCallback","prev","Math","max","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState","updateBlockNumber","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","startsWith","substr","length","Error","arr","Uint8Array","i","parseInt","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","name","digest","trim","ENS_NAME_REGEX","parseENSAddress","ensAddress","match","ensName","toLowerCase","ensPath","uriToHttp","uri","split","hash","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","a","parsedENS","contentHashUri","translatedUri","urls","url","isLast","response","fetch","ok","json","validationErrors","errors","reduce","memo","add","dataPath","message","REGISTRAR_ABI","constant","inputs","type","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","provider","Contract","ensRegistrarContract","namehash","resolver","useFetchListCallback","useWeb3Provider","ensResolver","ChainId","MAINNET","sendDispatch","requestId","nanoid","fetchTokenList","pending","tokenList","fulfilled","rejected","errorMessage","lists","useAllLists","activeListUrls","useActiveListUrls","useAllInactiveTokens","fetchList","callback","leading","savedCallback","useRef","current","tick","id","setInterval","clearInterval","useInterval","Object","keys","forEach","debug","list","loadingRequestId","UNSUPPORTED_LIST_URLS","pendingUpdate","getVersionUpgrade","version","VersionUpgrade","NONE","PATCH","MINOR","MAJOR","acceptListUpdate","waitRandom","min","ms","round","random","Promise","resolve","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","aggregate","obj","address","callData","resultsBlockNumber","returnData","toNumber","toString","results","s","multicall","debouncedListeners","callListeners","latestBlockNumber","useMulticallContract","cancellations","listeningKeys","useMemo","allListeners","listeners","callKey","keyListeners","filter","key","blocksPerFetch","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","callResults","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","JSON","stringify","sort","outdatedCallKeys","parse","calls","parseCallKey","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","Array","ix","slice","chunkArray","c","fetchingMulticallResults","index","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","result","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","updateMulticallResults","errorFetchingMulticallResults","lastBlockNumber","transactions","useToast","toastError","toastSuccess","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","shouldCheck","getTransactionReceipt","finalizeTransaction","blockHash","contractAddress","from","status","to","transactionHash","transactionIndex","flexDirection","summary","external","href","getBscScanLink","checkedTransaction","_path","_binanceChainListener","defineProperty","window","get","this","bsc","set","useEagerConnect","login","useAuth","connectorId","localStorage","getItem","connectorLocalStorageKey","isConnectorBinanceChain","ConnectorNames","BSC","isBinanceChainDefined","Reflect","has","useBlock","block","StyledDatePickerPortal","styled","theme","card","background","colors","cardBorder","text","input","primary","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMenuOpenIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","d","ForwardRef","SvgWalletIcon","SvgTwitterIcon","SvgSocialIcon2","_defs","SvgTelegramIcon","x1","y1","x2","y2","gradientUnits","stopColor","offset","ViewMode","MenuWrapper","toggled","mediaQueries","xl","MenuIconWrapper","MenuContentWrapper","WalletHeading","TokenItemWrapper","ButtonWrapper","MenuItem","SocialWrapper","TokenListWrapper","SocialIconsWrapper","Menu","logout","useTheme","isDark","toggleTheme","profile","isInitialized","isLoading","hasRegistered","hasProfile","useProfile","useTranslation","currentLanguage","setLanguage","t","activate","deactivate","showAllToken","setShowAllToken","walletbalance","setWalletBalance","getallToken","setAllTokens","log","getData","fetchData","axios","post","query","queryResult","ethereum","balances","web3","Web3","providers","HttpProvider","eth","getBalance","res","Balance","tokenData","elem","currency","src","alt","onClick","style","margin","display","color","alignItems","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","fallback","React","Component","Wrapper","Page","PageLoader","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","createBrowserHistory","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","useI18n","useContext","translationId","foundTranslation","translation","stringId","includesVariable","includes","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","useCakeVault","pools","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","AprRow","pool","stakingToken","earningToken","isFinished","apr","earningTokenPrice","isAutoVault","tooltipContent","useTooltip","placement","targetRef","tooltip","tooltipVisible","getAprData","earningsPercentageToDisplay","apyModalLink","getAddress","useModal","ApyCalculatorModal","linkLabel","linkHref","earningTokenSymbol","onPresentApyModal","justifyContent","fontSize","isDisabled","decimals","unit","bold","variant","scale","CakeVaultTokenPairImage","primaryTokenSrc","tokens","cake","primarySrc","secondarySrc","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","isStaking","isCakePool","primaryToken","secondaryToken","PromotedGradient","keyframes","StyledCard","Card","isPromoted","css","isDesktop","sm","StyledCardInner","Box","ExpandedWrapper","Flex","ExpandedFooter","currentBlock","totalStaked","startBlock","endBlock","stakingLimit","sousId","tokenAddress","poolContractAddress","cakeVaultContractAddress","getCakeVaultAddress","isMetaMaskInScope","isMetaMask","isManualCakePool","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","mb","small","gte","getBalanceNumber","manualCakeTotalMinusAutoVault","minus","getTotalStakedBalance","ml","mt","gt","getFullDisplayBalance","textTransform","projectLink","BASE_BSC_SCAN_URL","p","registerToken","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","usePreviousValue","useLastUpdated","now","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","useSousChef","handleApprove","approve","ethers","constants","MaxUint256","wait","updateUserAllowance","ApprovalAction","stakingTokenContract","useERC20","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","tokenSymbol","onDismiss","headerBackground","cardHeader","as","StyledButton","Button","PercentageButton","children","mx","options","gasLimit","DEFAULT_GAS_LIMIT","sousStake","amount","deposit","BIG_TEN","pow","sousStakeBnb","DEFAULT_TOKEN_DECIMAL","useStakePool","isUsingBnb","masterChefContract","useMasterchef","handleStake","stakeFarm","updateUserStakedBalance","updateUserBalance","onStake","sousUnstake","withdraw","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","unstakeFarm","updateUserPendingReward","onUnstake","StakeModal","isBnbPool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","formatNumber","fullDecimalStakeAmount","getDecimalAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","dividedBy","multipliedBy","amountToStake","handleConfirmClick","textAlign","minWidth","onUserInput","convertedInput","percentage","floor","currencyValue","isWarning","balance","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","prefix","mr","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","harvestFarm","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","Text","CardActions","harvest","poolCategory","PoolCategory","BINANCE","pendingReward","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","ConnectWalletButton","CardFooter","Container","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","checked","onChange","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","stakingTokenSymbol","showStakedTag","subtitle","showSubtitle","toLocaleLowerCase","role","HelpIconWrapper","EarningsCell","userDataLoaded","getCakeVaultEarnings","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","lastActionInMs","dateStringToDisplay","toLocaleString","labelText","asset","event","stopPropagation","undefined","Apr","showIcon","openRoiModal","padding","marginLeft","md","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","e","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","ActionTitles","ActionContent","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","fee","noFeeToPay","shouldShowTimer","HarvestAction","actionTitle","pt","alignSelf","lineHeight","marginTop","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakeVaultContract","useCakeVaultContract","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","convertCakeToShares","triggerWithdrawAllThreshold","sharesRemaining","sharesAsBigNumber","lte","withdrawAll","fetchCakeVaultUserData","handleDeposit","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","isVaultApproved","setIsVaultApproved","cakeContract","useCake","currentAllowance","checkApprovalStatus","useCheckVaultApprovalStatus","useVaultApprove","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","convertSharesToCake","cakeAsBigNumber","cakeAsNumberBalance","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","dropdown","lg","InfoSection","ActionPanel","breakpoints","isMd","performanceFeeAsDecimal","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","maxWidth","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","useDelayedUnmount","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","FlexLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Label","textSubtle","DetailPlaceholder","Value","CardTitle","isActive","Pools","useLocation","TranslateString","fetchPoolsUserDataAsync","transformPool","usePools","poolsWithoutAutoVault","usePersistState","localStorageKey","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","fetchCakeVaultPublicData","fetchCakeVaultFees","useFetchCakeVault","simpleRpcProvider","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","pathname","lowercaseQuery","latinise","poolsToSort","orderBy","sortPools","cardLayout","tableLayout","PageHeader","Select","label","option","SearchInput","placeholder","Loading","Farms","lazy","FarmAuction","NotFound","config","EXPONENTIAL_AT","DECIMAL_PLACES","BodyWrapper","TopBar","SearchWrapper","AccountWrapper","App","interval","setBlock","usePollBlockNumber","fetchProfile","useFetchProfile","onPresentConnectModal","useWalletModal","Global","substring","path","exact","component","iterations","ThemeProviderWrapper","useThemeManager","dark","light","Providers","getLibrary","store","RefreshContext","Updaters","Blocklist","Boolean","BLOCKED_ADDRESSES","ReactDOM","render","StrictMode","getElementById","priceHelperLps","lpAddresses","qsd","quoteToken","wbnb","fetchFarm","lpAddress","params","getMasterChefAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","all","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","some","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","initialState","loadArchivedFarmsData","isArchivedPid","createAsyncThunk","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","action","payload","extraReducers","builder","addCase","liveFarmData","farmData","userDataEl","findIndex","actions","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","Number","points","profileContract","getProfileContract","getUsername","process","username","getProfile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","StyledThemeContext","syrup","busd","sortByListPriority","urlA","urlB","first","DEFAULT_LIST_OF_LISTS","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","logoURI","Token","EMPTY_LIST","TESTNET","listCache","WeakMap","listToTokenMap","tokenMap","tagId","x","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","allTokens","currentUrl","useCombinedActiveList","DEFAULT_TOKEN_LIST","useCombinedInactiveList","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","useUnsupportedTokenList","UNSUPPORTED_TOKEN_LIST","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","serializeToken","deserializeToken","serializedToken","addTransaction","createAction","clearAllTransactions","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","Nfts","description","ipfs","sortOrder","identifier","variationId","video","webm","mp4","blur","teamsList","accum","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fast","slow","enterStaking","leaveStaking","blockSlice","initialBlock","nodes","getNodeUrl","sample","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","walletconnect","close","request","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","image","BASE_URL","tokenAdded","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","Provider","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","Injected","WalletConnect","Web3Provider","EN","locale","language","languages","values","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","languageMap","Map","LanguageContext","LanguageProvider","codeFromStorage","enLocale","currentLocale","prevState","fetchInitialLocales","setItem","translate","translatedText","languageContext","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","users","getTeams","teamsById","numberTeams","nbTeams","push","multicallv2","profileABI","teamData","onChainTeamData","teams","textColor","getImageUrlFromToken","TokenPairImage","DEFAULT_META","StyledPage","PageMeta","cakePriceUsd","pageMeta","minimumFractionDigits","maximumFractionDigits","getCustomMeta","pageTitle","property","content","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","kalm","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","px","Grid","GridItem","GridHeaderItem","BulletList","ul","displayApr","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","num","freq","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getTokenUriData","contract","getErc721Contract","tokenURI","uriDataResponse","uriData","transformUserData","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","user","toggleThemeAction","useUserAddedTokens","serializedTokensMap","useTokensFromMap","includeUserAdded","userAddedTokens","mapWithoutUrls","newMap","tokenMap_","useAllTokens","inactiveTokens","activeTokensAddresses","displayDecimals","number","minPrecision","maxPrecision","CAKE","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","dogeson","babydoge","minidoge","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","web3React","refEth","setprovider","defaultOptions","hydrate","identity","dehydrate","initialValue","userOptions","valueFromLS","setValue","Latinise","latin_map","τ","Τ","getContract","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","sousChefBnb","sousChef","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","Outer","bubblegum","Inner","PoolIds","LotteryStatus","getPoolApr","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","CAKE_PER_YEAR","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","multi","itf","utils","Interface","calldata","encodeFunctionData","decodeFunctionResult","requireSuccess","tryAggregate","previousValue","start","end","suffix","duration","separator","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","boxShadow","DropDownList","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","handleClickOutside","selectedIndex","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","StyledInput","Input","InputWrapper","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","onBlur","ERC20_ABI","ERC20_BYTES32_ABI","MULTICALL_NETWORKS","getSigner","useContract","ABI","withSignerIfPossible","useTokenContract","useBytes32TokenContract","MULTICALL_ABI","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Result","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_BASE_URL","SNAPSHOT_API","numberOrNull","valueNum","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getBetHistory","where","skip","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","currentEpoch","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","campaigns","badge","campaignMap","campaign","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","isValid","getAllVotes","proposalId","votesPerChunk","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","getState","proposalVotes","voting","votingSlice","_inValid","LOADING","IDLE","TICKET_LIMIT_PER_REQUEST","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","roundId","hasRoundBeenClaimed","tickets","ticket","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","cursor","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","createReducer","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","Field","userExpertMode","userSingleHopOnly","userSlippageTolerance","INITIAL_ALLOWED_SLIPPAGE","userDeadline","DEFAULT_DEADLINE_FROM_NOW","pairs","timestamp","audioPlay","lastUpdateVersionTimestamp","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","addSerializedToken","removeSerializedToken","addSerializedPair","serializedPair","token0","token1","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","approval","claim","txs","confirmedTime","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","resetMintState","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_ACTIVE_LIST_URLS","addList","removeList","u","enableList","disableList","lastInitializedSet","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","addMulticallListeners","toCallKey","removeMulticallListeners","PERSISTED_KEYS","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictions","predictionsReducer","profileReducer","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","swap","mint","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","BASE_BSC_SCAN_URLS","CAKE_PER_BLOCK","BASE_ADD_LIQUIDITY_URL","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","shares","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","cakeAsDisplayBalance","amountInShares","sharesAsNumberBalance","sharesAsDisplayBalance","isHighValueToken","autoCakeProfit","autoUsdProfit","ADDRESS_REGEX","LOWER_HEX_REGEX","test","pcs","CORE","ROUTER_ADDRESS","BASES_TO_TRACK_LIQUIDITY_FOR","WETH","PINNED_PAIRS","BIPS_BASE","JSBI","BigInt","Percent","exponentiate","toastContext","RPC_URL","getRpcUrl","JsonRpcProvider","isAddress","AddressZero","connectUnchecked","getProviderOrSigner"],"mappings":"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","file":"static/js/main.23c2f5f3.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState,AppDispatch } from '../index'\nimport {  toggleMenu as _toggleMenu } from './actions'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\nexport function useMenuToggle() {\n  const dispatch = useDispatch<AppDispatch>();\n  const menuToggled = useSelector<\n    AppState,\n    AppState['application']['menuToggled']\n  >((state) => state.application.menuToggled);\n\n  const toggleMenu = (open: boolean) =>\n    dispatch(_toggleMenu(open));\n\n  return { menuToggled, toggleMenu };\n}","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenuOpenIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 12,\n    viewBox: \"0 0 17 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.948131 11.3776H11.3776C11.899 11.3776 12.3257 10.9509 12.3257 10.4294C12.3257 9.90797 11.899 9.48131 11.3776 9.48131H0.948131C0.426659 9.48131 0 9.90797 0 10.4294C0 10.9509 0.426659 11.3776 0.948131 11.3776ZM0.948131 6.63692H8.53318C9.05466 6.63692 9.48131 6.21026 9.48131 5.68879C9.48131 5.16732 9.05466 4.74066 8.53318 4.74066H0.948131C0.426659 4.74066 0 5.16732 0 5.68879C0 6.21026 0.426659 6.63692 0.948131 6.63692ZM0 0.948131C0 1.4696 0.426659 1.89626 0.948131 1.89626H11.3776C11.899 1.89626 12.3257 1.4696 12.3257 0.948131C12.3257 0.426659 11.899 0 11.3776 0H0.948131C0.426659 0 0 0.426659 0 0.948131ZM16.4027 8.41941L13.6721 5.68879L16.4027 2.95817C16.7724 2.5884 16.7724 1.99108 16.4027 1.6213C16.0329 1.25153 15.4356 1.25153 15.0658 1.6213L11.662 5.0251C11.2922 5.39487 11.2922 5.99219 11.662 6.36196L15.0658 9.76575C15.4356 10.1355 16.0329 10.1355 16.4027 9.76575C16.763 9.39598 16.7724 8.78918 16.4027 8.41941Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenuOpenIcon);\nexport default __webpack_public_path__ + \"static/media/MenuOpenIcon.7f7c1b93.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWalletIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 23,\n    viewBox: \"0 0 24 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 18V19C21 20.1 20.1 21 19 21H5C3.89 21 3 20.1 3 19V5C3 3.9 3.89 3 5 3H19C20.1 3 21 3.9 21 5V6H12C10.89 6 10 6.9 10 8V16C10 17.1 10.89 18 12 18H21ZM12 16H22V8H12V16ZM16 13.5C15.17 13.5 14.5 12.83 14.5 12C14.5 11.17 15.17 10.5 16 10.5C16.83 10.5 17.5 11.17 17.5 12C17.5 12.83 16.83 13.5 16 13.5Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWalletIcon);\nexport default __webpack_public_path__ + \"static/media/WalletIcon.0af49a38.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTwitterIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 20,\n    viewBox: \"0 0 24 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.4975 19.6801C16.4943 19.6801 21.4143 12.2324 21.4143 5.77411C21.4143 5.56257 21.41 5.35199 21.4005 5.14236C22.3555 4.45248 23.1856 3.59157 23.8403 2.61153C22.9639 3.00078 22.0208 3.26282 21.0315 3.38097C22.0413 2.7759 22.8166 1.81875 23.1823 0.677718C22.2373 1.23753 21.1907 1.64441 20.0764 1.86407C19.1839 0.914094 17.9131 0.319916 16.5061 0.319916C13.805 0.319916 11.6146 2.50869 11.6146 5.20667C11.6146 5.5902 11.6575 5.96325 11.7414 6.32108C7.6762 6.11669 4.07148 4.17188 1.659 1.21466C1.23894 1.93693 0.996724 2.77593 0.996724 3.67115C0.996724 5.36679 1.86024 6.8637 3.17336 7.73942C2.37088 7.71465 1.61704 7.49453 0.958164 7.12815C0.957444 7.14865 0.957441 7.16865 0.957441 7.19057C0.957441 9.55752 2.64344 11.5337 4.88152 11.9816C4.47052 12.0935 4.03808 12.1535 3.59176 12.1535C3.27707 12.1535 2.97048 12.1226 2.67248 12.0654C3.29518 14.0073 5.10088 15.4205 7.24168 15.46C5.5676 16.7711 3.45872 17.552 1.16672 17.552C0.772404 17.552 0.382856 17.5296 0 17.4844C2.16472 18.8708 4.73512 19.6798 7.49776 19.6798\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTwitterIcon);\nexport default __webpack_public_path__ + \"static/media/TwitterIcon.2d715243.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSocialIcon2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.8283 0C6.20433 0 0.840332 5.376 0.840332 12C0.840332 18.624 6.20433 24 12.8283 24C19.4643 24 24.8403 18.624 24.8403 12C24.8403 5.376 19.4643 0 12.8283 0ZM21.1443 7.2H17.6043C17.2203 5.7 16.6683 4.26 15.9483 2.928C18.1563 3.684 19.9923 5.22 21.1443 7.2ZM12.8403 2.448C13.8363 3.888 14.6163 5.484 15.1323 7.2H10.5483C11.0643 5.484 11.8443 3.888 12.8403 2.448ZM3.55233 14.4C3.36033 13.632 3.24033 12.828 3.24033 12C3.24033 11.172 3.36033 10.368 3.55233 9.6H7.60833C7.51233 10.392 7.44033 11.184 7.44033 12C7.44033 12.816 7.51233 13.608 7.60833 14.4H3.55233ZM4.53633 16.8H8.07633C8.46033 18.3 9.01233 19.74 9.73233 21.072C7.52433 20.316 5.68833 18.792 4.53633 16.8ZM8.07633 7.2H4.53633C5.68833 5.208 7.52433 3.684 9.73233 2.928C9.01233 4.26 8.46033 5.7 8.07633 7.2ZM12.8403 21.552C11.8443 20.112 11.0643 18.516 10.5483 16.8H15.1323C14.6163 18.516 13.8363 20.112 12.8403 21.552ZM15.6483 14.4H10.0323C9.92433 13.608 9.84033 12.816 9.84033 12C9.84033 11.184 9.92433 10.38 10.0323 9.6H15.6483C15.7563 10.38 15.8403 11.184 15.8403 12C15.8403 12.816 15.7563 13.608 15.6483 14.4ZM15.9483 21.072C16.6683 19.74 17.2203 18.3 17.6043 16.8H21.1443C19.9923 18.78 18.1563 20.316 15.9483 21.072ZM18.0723 14.4C18.1683 13.608 18.2403 12.816 18.2403 12C18.2403 11.184 18.1683 10.392 18.0723 9.6H22.1283C22.3203 10.368 22.4403 11.172 22.4403 12C22.4403 12.828 22.3203 13.632 22.1283 14.4H18.0723Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialIcon2);\nexport default __webpack_public_path__ + \"static/media/SocialIcon2.eb4376ee.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTelegramIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.6755 15.0704L18.0874 20.5464C18.9332 21.0131 19.5435 20.7714 19.7543 19.7612L22.7713 5.54385C23.0801 4.30546 22.2992 3.74359 21.49 4.11097L3.77408 10.9422C2.56481 11.4272 2.57202 12.1019 3.55368 12.4025L8.09999 13.8216L18.6252 7.18133C19.1221 6.88001 19.5782 7.04186 19.2039 7.37414\",\n    fill: \"url(#paint0_linear)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear\",\n    x1: 16.0403,\n    y1: 11.3306,\n    x2: 18.9106,\n    y2: 17.8703,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#EFF7FC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegramIcon);\nexport default __webpack_public_path__ + \"static/media/TelegramIcon.f813fb76.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { ReactElement, useContext, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Menu as UikitMenu, Button } from '@pancakeswap/uikit'\n// import { Button } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { ReactComponent as MenuOpenIcon } from 'assets/svg/icon/MenuOpenIcon.svg'\nimport { ReactComponent as WalletIcon } from 'assets/svg/icon/WalletIcon.svg'\nimport { ReactComponent as TwitterIcon } from 'assets/svg/icon/TwitterIcon.svg'\nimport { ReactComponent as SocialIcon2 } from 'assets/svg/icon/SocialIcon2.svg'\nimport { ReactComponent as TelegramIcon } from 'assets/svg/icon/TelegramIcon.svg'\nimport { useMenuToggle } from 'state/application/hooks'\nimport Web3 from 'web3';\nimport axios from 'axios'\nimport config from './config'\n\n\nconst MenuWrapper = styled.div<{ toggled: boolean }>`\n  width: 320px;\n  background: #1A1A27;\n  border-right: 1px solid #AFAFAF;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: fixed;\n  left: ${(props) => (props.toggled ? '-320px' : 0)};\n  transition: left 0.5s;\n  z-index: 2;\n  height: 100vh;\n  & img {\n    width: 140px;\n  }\n  & p {\n    font-size: 16px;\n    line-height: 19px;\n    color: white;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    left: 0;\n    width: ${(props) => (props.toggled ? '100px' : '320px')};\n    & p {\n      font-size: ${(props) => (props.toggled ? '14px' : '16px')};\n      line-height: ${(props) => (props.toggled ? '16px' : '19px')};  \n    }\n  }\n`;\n\nconst MenuIconWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 24px;\n  & span {\n    color: white;\n    font-size: 14px;\n    line-height: 16px;\n    text-transform: uppercase;\n  }\n  & button {\n    background: transparent !important;\n    padding: 10px;\n    & svg path {\n      fill: white;\n    }\n  }\n`\n\nconst MenuContentWrapper = styled.div<{ toggled: boolean }>`\n  width: 100%;\n  flex: 1;\n  overflow-y: auto;\n  padding: 0 24px 32px;\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: ${(props) => (props.toggled ? '0 8px' : '0 24px')};\n  }\n`\n\nconst WalletHeading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #F9AC61;\n  width: 100%;\n  height: 56px;\n  padding: 0 48px;\n  & div {\n    display: flex;\n    align-items: center;\n    & svg {\n      margin: -2px 10px 0 0;\n    }\n  }\n`\nconst TokenItemWrapper = styled.div<{ toggled: boolean }>`\n  background: #5E5D62;\n  border-radius: 8px;\n  margin-top: 2px;\n  display: flex;\n  justify-content: space-between;\n  padding: ${(props) => (props.toggled ? '4px' : '8px 12px')};\n  position: relative;\n  & div {\n    width: ${(props) => (props.toggled ? '100%' : 'auto')};\n  }\n  & div p:last-child {\n    margin-top: 8px;\n  }\n  & p {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: 100%;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  background: #F9AC61;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 56px;\n  border-radius: 8px;\n  cursor: pointer;\n`\n\nconst MenuItem = styled.a`\n  width: 100%;\n  height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 0 24px;\n  border-radius: 10px;\n  & p {\n    margin-left: 12px;\n  }\n  &:hover {\n    background: #F9AC61;\n  }\n`\nconst SocialWrapper = styled.div`\n  margin: 10px 0 32px;\n  & p {\n    margin-left: 12px;\n    margin-bottom: 10px;\n  }\n`\n\nconst TokenListWrapper = styled.div`\n  overflow-y: auto;\n  max-height: 300px;\n`\n\nconst SocialIconsWrapper = styled.div<{ toggled: boolean }>`\n  display: flex;\n  height: ${(props) => props.toggled ? 'auto' : '48px'};\n  & div {\n    display: flex;\n    width: ${(props) => props.toggled ? '100%' : 'auto'};\n    flex-direction: ${(props) => props.toggled ? 'column' : 'row'};\n    align-items: center;\n    background: rgba(159, 219, 236, 0.2);\n    border-radius: 20px;\n    & svg {\n      margin: ${(props) => props.toggled ? '11px 0' : '0 11px'};\n    }\n  }\n`\n\n\nconst Menu: React.FC = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  // new \n  const { activate, deactivate } = useWeb3React()\n  // const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n\n  const { menuToggled, toggleMenu } = useMenuToggle();\n  const [showAllToken, setShowAllToken] = useState(false);\n\n  const [walletbalance, setWalletBalance] = useState('');\n\n  const [getallToken, setAllTokens] = useState([]);\n\n  console.log(\"getallToken\", getallToken)\n\n  // const getAccount= new web3.eth.Iban('account');\n  // const getBalance= async()=>{\n\n  // const balance = await  web3.eth.getBalance('account'); \n  // console.log(\"balance\",balance);\n  //     setWalletBalance(balance);\n  // }\n\n  // useEffect(()=>{\n  //   getBalance() \n  // }); \n\n  const Balance = () => {\n\n    const testnet = 'https://bsc-dataseed1.defibit.io';\n    const web3 = new Web3(new Web3.providers.HttpProvider(testnet));\n    const balance = account && web3.eth.getBalance(account).then((res) => {\n      setWalletBalance(res);\n    })\n  }\n\n  const getData = `\n  {\n    ethereum(network: bsc) {\n      address(address: {is: \"${account}\" }){\n        balances {\n          value\n          currency {\n            address\n            symbol\n            tokenType\n          }\n        }\n      }\n    }\n  }`\n  const fetchData = async () => {\n    if (account) {\n      const queryResult = await axios.post('https://graphql.bitquery.io/', { query: getData });\n      if (queryResult.data.data) {\n        setAllTokens(queryResult.data.data.ethereum.address[0].balances)\n\n      }\n    }\n  }\n\n  //     const chartData =[]\n  //     result.forEach(e =>{\n  //        // console.log('result',e.timeInterval.minute);\n  //        chartData.push({\n  //            open : parseFloat(e.open_price),\n  //            high : parseFloat(e.maximum_price),\n  //            low : parseFloat(e.minimum_price),\n  //            close: parseFloat(e.close_price),\n  //            // time : e.timeInterval.minute\n  //            // time : \"2021-04-12\"\n  //        })\n  //    })\n  //    console.log('before::::' , chartData)\n\n  // };\n\n  useEffect(() => {\n    fetchData()\n    Balance();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account])\n\n  // const [alldata, setalldata] = useState([]);\n  // console.log(\"alladta\",alldata)\n  // const getTableData = () => {\n  //   axios.get(\"http://ec2-34-220-133-56.us-west-2.compute.amazonaws.com:1337/approvals\")\n  //       .then((response) => {\n  //           console.log(\"response\", response.data.approvals);\n  //           setalldata(response.data.approvals)\n\n  //       })\n  //       .catch((error) => { console.log(\"Error\", error); })\n\n  //      }  \n\n\n  const tokenData = getallToken.map((elem: any) => {\n    const { currency, value } = elem;\n\n    return (\n      <>\n        <TokenItemWrapper toggled={menuToggled}>\n          <div>\n            <p><b>{currency.symbol}</b></p>\n            <p><b>{value}</b></p>\n          </div>\n          {/* {\n                  !menuToggled &&\n                  <div>\n                    <p><b>{currency.symbol }</b></p>\n                    <p><b>${ value}</b></p>\n                  </div>\n                } */}\n        </TokenItemWrapper>\n\n\n      </>\n    )\n  })\n\n\n\n  return (\n    <MenuWrapper toggled={menuToggled} {...props}>\n      <img src='/main.png' alt='Main Logo' />\n      <MenuIconWrapper>\n        {!menuToggled && <span>Main Menu</span>\n        }\n        <Button onClick={() => { toggleMenu(!menuToggled) }}>\n          {menuToggled ?\n            <svg viewBox='0 0 24 24' width='24px'>\n              <path d=\"M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z\" />\n            </svg>\n            :\n            <MenuOpenIcon />\n          }\n        </Button>\n      </MenuIconWrapper>\n      <WalletHeading>\n        <div>\n          <WalletIcon />\n          {\n            !menuToggled && <p>Wallet</p>\n          }\n        </div>\n        {!menuToggled && <p><b>{account ? walletbalance : ''}</b></p>\n        }\n      </WalletHeading>\n      <MenuContentWrapper toggled={menuToggled}>\n\n        {\n          account ?\n            <div>\n\n\n              <TokenListWrapper>\n                {tokenData}\n              </TokenListWrapper>\n              <ButtonWrapper style={{ margin: '10px 0' }} onClick={() => { setShowAllToken(!showAllToken) }}>\n                <p><b>{showAllToken ? 'Show Some Tokens' : 'Show All Tokens'}</b></p>\n              </ButtonWrapper>\n            </div>\n            : \"\"\n\n        }\n\n        <MenuItem href=\"/farms\">\n          {/* <Icon /> */}\n          {\n            !menuToggled && <div style={{ display: 'flex',color: 'white', alignItems: 'center' }}><img src=\"/farms.png\" alt=\"logo\" style={{ width: '25px' }} /><b>&nbsp; Farms</b></div>\n          }\n        </MenuItem>\n\n        <MenuItem href=\"/pools\">\n          {/* <Icon /> */}\n          {\n            !menuToggled && <div style={{ display: 'flex',color: 'white', alignItems: 'center' }}><img src=\"/pools.svg\" alt=\"logo\" style={{ width: '25px' }} /><b>&nbsp; Pools</b></div>\n          }\n        </MenuItem>\n        <MenuItem href=\"/pools\">\n          {/* <Icon /> */}\n          {\n            !menuToggled && <div style={{ display: 'flex',color: 'white', alignItems: 'center' }}><img src=\"/pools.svg\" alt=\"logo\" style={{ width: '25px' }} /><b> &nbsp;Predication</b></div>\n          }\n        </MenuItem>\n        <MenuItem href=\"/pools\">\n          {/* <Icon /> */}\n          {\n            !menuToggled && <div style={{ display: 'flex',color: 'white', alignItems: 'center' }}><img src=\"/ifo.png\" alt=\"logo\" style={{ width: '25px' }} /><b> &nbsp;IFO</b></div>\n          }\n        </MenuItem>\n        <SocialWrapper>\n          <p><b>Socials</b></p>\n          <SocialIconsWrapper toggled={menuToggled}>\n            <div>\n              <TwitterIcon />\n              <SocialIcon2 />\n              <TelegramIcon />\n            </div>\n          </SocialIconsWrapper>\n        </SocialWrapper>\n      </MenuContentWrapper>\n\n      {/* <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      \n      links={config(t)}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n      \n    />  */}\n    </MenuWrapper>\n  )\n}\n\nexport default Menu\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      {/* <Spinner /> */}\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localization/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn Dogeson, stake Dogeson')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n         \n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n \n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon,Image, Button } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { CommunityTag } from 'components/Tags'\n\nimport AprRow from './AprRow'\nimport StyledCardHeader from './StyledCardHeader'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport CardActions from './CardActions'\n\n\n\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <ConnectWalletButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n    \n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n  margin-bottom:40px;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\nimport { StyledCard, StyledCardInner } from './components/PoolCard/StyledCard';\n\n// import Coming from './components/Coming'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\n\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    // const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        // pool.isAutoVault ? (\n        //   <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        // ) :\n         (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        )\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            {/* <HelpButton />\n            <BountyCard /> */}\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n       \n\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n          \n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n          <div style={{ display:'flex', justifyContent:'center'}}>\n          <StyledCard >\n        <div style={{ padding: '24px', width:'352px'}}>\n          <CardTitle>\n            {TranslateString(414, 'Your Project?')}{' '}\n            <span role=\"img\" aria-label=\"eyes\">\n              👀\n            </span>\n          </CardTitle>\n          <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n          <Balance>???</Balance>\n          <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n          <Button\n            variant=\"secondary\"\n            as=\"a\"\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n            external\n            width=\"100%\"\n            mb=\"16px\"\n          >\n            {TranslateString(418, 'Apply Now')}\n          </Button>\n          <DetailPlaceholder>\n            <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n            <Value>??</Value>\n          </DetailPlaceholder>\n          <DetailPlaceholder>\n            <div style={{ flex: 1 }}>\n              <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n              </span>\n              {TranslateString(384, 'Your Stake')}:\n            </div>\n            <Value>???</Value>\n          </DetailPlaceholder>\n        </div>\n        <Footer>\n          <CommunityTag />\n        </Footer>\n      </StyledCard>\n          </div>\n       \n        <div ref={loadMoreRef} />\n        {/* <Coming /> */}\n        {/* <Image\n          mx=\"auto\"ges/decorations/3d-s\n          mt=\"12px\"\n          src=\"/imayrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy, useState } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { Button, ResetCSS, useMatchBreakpoints, useWalletModal } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMenuToggle } from 'state/application/hooks'\nimport { ConnectorId, SearchIcon } from '@pancakeswap-libs/uikit'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\n\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\n\n\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\n\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n// starting here\n\nconst AppWrapper = styled.div`\n  display: flex;\n`\n\nconst BodyWrapper = styled.div<{ toggled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 12px;\n  min-height: calc(100vh - 152px);\n  align-items: center;\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #1A1A27;\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: ${(props) => props.toggled ? 'calc(100% - 100px)' : 'calc(100% - 320px)'};\n    margin-left: ${(props) => props.toggled ? '100px' : '320px'};\n    padding: 0 32px;\n  }\n`\n\nconst BodyOverlay = styled.div<{ toggled: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: white;\n  opacity: 0.2;\n  z-index: 9;\n  display: ${(props) => props.toggled ? 'none' : 'block'};\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: none;\n  }\n`\n\nconst Marginer = styled.div`\n  margin-top: 5rem;\n`\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-top: 32px;\n  flex-wrap: wrap;\n  & button:first-child {\n    background: transparent;\n    padding: 0;\n    outline: none;\n    border: none;\n    box-shadow: none;\n    margin-right: 12px;\n    margin-bottom: 8px;\n    height: 32px;\n    & svg path {\n      fill: white;\n    }\n    ${({ theme }) => theme.mediaQueries.xl} {\n      display: none;\n    }\n  }\n`\nconst SearchWrapper = styled.div`\n  display: flex;\n  align-item: center;\n  max-width: 350px;\n  width: calc(100% - 100px);\n  position: relative;\n  & svg {\n    width: 16px;\n    height: 19px;\n  }\n  & input {\n    width: calc(100% - 20px);\n    background: transparent;\n    box-shadow: none;\n    border: none;\n    margin-left: 8px;\n    font-size: 20px;\n    margin-top: -5px;\n    outline: none;\n    color: white;\n    &::placeholder {\n      color: white;\n    }\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-left: 16px;\n  }\n`\n\nconst AccountWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  & > div:first-child {\n    padding: 12px;\n    border-radius: 6px;\n    color: white;\n    background: #3861FB;\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 700;\n    margin-right: 24px;\n  }\n  & > div:last-child {\n    display: flex;\n    align-items: center;\n    & p {\n      font-size: 16px;\n      line-height: 19px;\n      font-weight: 500;\n      letter-spacing: 0.02em;\n      color: white;\n      margin: 0 4px 0 8px;\n    }\n  }\n`\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n  const { account, activate, deactivate } = useWeb3React();\n  const { menuToggled, toggleMenu } = useMenuToggle();\n  const { isXl } = useMatchBreakpoints();\n\n  const handleLogin = (connectorId: ConnectorId) => {\n    if (connectorId === 'walletconnect') {\n      // return activate(walletconnect)\n    }\n    // return activate(injected)\n  }\n  const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu />\n      <BodyWrapper toggled={menuToggled}>\n      <TopBar>\n        <Button onClick={() => { toggleMenu(!menuToggled) }}>\n          <svg viewBox='0 0 24 24' width='24px'>\n            <path d=\"M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z\" />\n          </svg>\n        </Button>\n        <SearchWrapper>\n          <SearchIcon />\n          <input placeholder='Search Data' />\n        </SearchWrapper>\n        {\n          account ?\n            <AccountWrapper>\n              <div>Connected</div>\n              <div style={{display:'flex', alignItems:'center', color:'white'}}>\n                {/* <EmptyAvatar /> */}\n               <img src=\"./account_circle.png\" alt=\"\" /> {account.substring(0, 8)}...{account.substr(account.length - 4)}\n                {/* <ChevronDown /> */}\n              </div>\n            </AccountWrapper>\n            :\n            <Button onClick={onPresentConnectModal}>Connect</Button>\n        }\n      </TopBar>\n      <SuspenseWithChunkError fallback={<PageLoader />}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Farms />\n          </Route>\n          <Route exact path=\"/farms/auction\">\n            <FarmAuction />\n          </Route>\n          <Route path=\"/farms\">\n            <Farms />\n          </Route>\n          <Route path=\"/pools\">\n            <Pools />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n      </SuspenseWithChunkError>\n      {/* </Menu> */}\n      </BodyWrapper>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'Dogeson-bnb',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'Dogeson-busd',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'Dogeson-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  // {\n  //   pid: 431,\n  //   lpSymbol: 'C98-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n  //   },\n  //   token: tokens.c98,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 430,\n  //   lpSymbol: 'AXS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n  //   },\n  //   token: tokens.axs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 379,\n  //   lpSymbol: 'PMON-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n  //   },\n  //   token: tokens.pmon,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 368,\n  //   lpSymbol: 'TRX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n  //   },\n  //   token: tokens.trx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 429,\n  //   lpSymbol: 'CHESS-USDC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n  //   },\n  //   token: tokens.chess,\n  //   quoteToken: tokens.usdc,\n  // },\n  // {\n  //   pid: 428,\n  //   lpSymbol: 'TITAN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n  //   },\n  //   token: tokens.titan,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 427,\n  //   lpSymbol: 'ONE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n  //   },\n  //   token: tokens.harmony,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 426,\n  //   lpSymbol: 'MASK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n  //   },\n  //   token: tokens.mask,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 425,\n  //   lpSymbol: 'DVI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n  //   },\n  //   token: tokens.dvi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 339,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 424,\n  //   lpSymbol: 'ADX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n  //   },\n  //   token: tokens.adx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 423,\n  //   lpSymbol: 'USDC-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.usdt,\n  // },\n  // {\n  //   pid: 422,\n  //   lpSymbol: 'CAKE-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.usdt,\n  // },\n  // {\n  //   pid: 357,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 421,\n  //   lpSymbol: 'BSCPAD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n  //   },\n  //   token: tokens.bscpad,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 420,\n  //   lpSymbol: 'RABBIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n  //   },\n  //   token: tokens.rabbit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 419,\n  //   lpSymbol: 'WAULTx-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e4370204f598205998143F07ebCC486E441b456',\n  //   },\n  //   token: tokens.waultx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 418,\n  //   lpSymbol: 'WEX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n  //   },\n  //   token: tokens.wex,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 417,\n  //   lpSymbol: 'FORM-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n  //   },\n  //   token: tokens.form,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 416,\n  //   lpSymbol: 'ORBS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n  //   },\n  //   token: tokens.orbs,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 415,\n  //   lpSymbol: 'DG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n  //   },\n  //   token: tokens.$dg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 414,\n  //   lpSymbol: 'WOO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n  //   },\n  //   token: tokens.woo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 413,\n  //   lpSymbol: 'HTB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n  //   },\n  //   token: tokens.htb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 351,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 337,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 412,\n  //   lpSymbol: 'HAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n  //   },\n  //   token: tokens.hai,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 411,\n  //   lpSymbol: 'O3-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n  //   },\n  //   token: tokens.o3,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 410,\n  //   lpSymbol: 'AMPL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n  //   },\n  //   token: tokens.ampl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 343,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 409,\n  //   lpSymbol: 'ETH-USDC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.usdc,\n  // },\n  // {\n  //   pid: 408,\n  //   lpSymbol: 'BTCB-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 347,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 407,\n  //   lpSymbol: 'MARSH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n  //   },\n  //   token: tokens.marsh,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 406,\n  //   lpSymbol: 'BORING-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n  //   },\n  //   token: tokens.boring,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 405,\n  //   lpSymbol: 'MBOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n  //   },\n  //   token: tokens.mbox,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 404,\n  //   lpSymbol: 'ATA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xef7767677867552cfa699148b96a03358a9be779',\n  //   },\n  //   token: tokens.ata,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 403,\n  //   lpSymbol: 'MX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n  //   },\n  //   token: tokens.mx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 402,\n  //   lpSymbol: 'bCFX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n  //   },\n  //   token: tokens.bcfx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 401,\n  //   lpSymbol: 'QKC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n  //   },\n  //   token: tokens.qkc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 400,\n  //   lpSymbol: 'KTN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n  //   },\n  //   token: tokens.ktn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 399,\n  //   lpSymbol: 'MTRG-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n  //   },\n  //   token: tokens.mtrg,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 398,\n  //   lpSymbol: 'SWG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n  //   },\n  //   token: tokens.swg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 397,\n  //   lpSymbol: 'TUSD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n  //   },\n  //   token: tokens.tusd,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 396,\n  //   lpSymbol: 'VRT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n  //   },\n  //   token: tokens.vrt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 395,\n  //   lpSymbol: 'EZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n  //   },\n  //   token: tokens.ez,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 394,\n  //   lpSymbol: 'KALM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n  //   },\n  //   token: tokens.kalm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 393,\n  //   lpSymbol: 'pOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n  //   },\n  //   token: tokens.popen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 335,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 392,\n  //   lpSymbol: 'WELL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n  //   },\n  //   token: tokens.well,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 391,\n  //   lpSymbol: 'DERI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n  //   },\n  //   token: tokens.deri,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 390,\n  //   lpSymbol: 'CHR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n  //   },\n  //   token: tokens.chr,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 389,\n  //   lpSymbol: 'CAKE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 388,\n  //   lpSymbol: 'CYC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n  //   },\n  //   token: tokens.cyc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 387,\n  //   lpSymbol: 'XEND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n  //   },\n  //   token: tokens.xend,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 296,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 386,\n  //   lpSymbol: 'HOTCROSS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n  //   },\n  //   token: tokens.hotcross,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 385,\n  //   lpSymbol: 'RFOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n  //   },\n  //   token: tokens.rfox,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 384,\n  //   lpSymbol: 'WMASS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n  //   },\n  //   token: tokens.wmass,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 383,\n  //   lpSymbol: 'UBXT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n  //   },\n  //   token: tokens.ubxt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 381,\n  //   lpSymbol: 'BTR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n  //   },\n  //   token: tokens.btr,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 380,\n  //   lpSymbol: 'τDOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n  //   },\n  //   token: tokens.τdoge,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 378,\n  //   lpSymbol: 'ONE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n  //   },\n  //   token: tokens.one,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 377,\n  //   lpSymbol: 'FINE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n  //   },\n  //   token: tokens.fine,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 376,\n  //   lpSymbol: 'DOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n  //   },\n  //   token: tokens.doge,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 310,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 375,\n  //   lpSymbol: 'OIN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n  //   },\n  //   token: tokens.oin,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 374,\n  //   lpSymbol: 'HYFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n  //   },\n  //   token: tokens.hyfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 373,\n  //   lpSymbol: 'KUN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n  //   },\n  //   token: tokens.kun,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 372,\n  //   lpSymbol: 'KUN-QSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n  //   },\n  //   token: tokens.kun,\n  //   quoteToken: tokens.qsd,\n  // },\n  // {\n  //   pid: 371,\n  //   lpSymbol: 'MATH-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n  //   },\n  //   token: tokens.math,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 370,\n  //   lpSymbol: 'mCOIN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n  //   },\n  //   token: tokens.mcoin,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 369,\n  //   lpSymbol: 'WIN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n  //   },\n  //   token: tokens.win,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 367,\n  //   lpSymbol: 'BTT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n  //   },\n  //   token: tokens.btt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 366,\n  //   lpSymbol: 'PNT-pBTC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n  //   },\n  //   token: tokens.pnt,\n  //   quoteToken: tokens.pbtc,\n  // },\n  // {\n  //   pid: 311,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 365,\n  //   lpSymbol: 'BTCB-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 364,\n  //   lpSymbol: 'LMT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n  //   },\n  //   token: tokens.lmt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 363,\n  //   lpSymbol: 'DFD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n  //   },\n  //   token: tokens.dfd,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 362,\n  //   lpSymbol: 'ALPACA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n  //   },\n  //   token: tokens.alpaca,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 361,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 304,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 360,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 359,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 358,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 356,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 355,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 354,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 353,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 352,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 350,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 349,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 348,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 346,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 345,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 344,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 342,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 341,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 340,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 338,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 336,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 334,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 333,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 332,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 331,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 330,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 329,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 328,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 327,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 326,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 325,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 324,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 323,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 322,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 321,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 320,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 319,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x853784B7BDe87d858555715c0123374242db7943',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 318,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 317,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 316,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 315,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 314,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 313,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 312,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 309,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 308,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 307,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 306,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 305,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 303,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 302,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 301,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 300,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 299,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 298,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 297,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 295,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 294,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 293,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 292,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 291,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 290,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 289,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 288,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 287,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 286,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 285,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 284,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 283,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 282,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 281,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 280,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 279,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 278,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 277,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 276,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 275,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 274,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 273,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 272,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 271,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 270,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 269,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 268,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 267,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 266,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 265,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 264,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 263,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 262,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 261,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 260,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 259,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 258,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 257,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 256,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 255,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 254,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 253,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // /**\n  //  * V2 farms, set to be removed once unstaked\n  //  */\n  // {\n  //   pid: 139,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 250,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 193,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 249,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 248,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 247,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 246,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 245,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 244,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 243,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 242,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 241,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 240,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 239,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 238,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 237,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 236,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 235,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 234,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 233,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 232,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 231,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 230,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 229,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 228,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 227,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 226,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 225,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 224,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 223,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 222,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe3D941e74141311436F82523817EBaa26462967d',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 221,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 220,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 219,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 218,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 217,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 216,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 215,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 214,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 213,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 212,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 211,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 210,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 209,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 208,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 207,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 206,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 205,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 204,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 203,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 202,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 201,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 200,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 199,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 198,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 197,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 196,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 195,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 194,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 192,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 191,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 190,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 189,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 188,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 187,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 186,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 185,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 184,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 183,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 182,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 181,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2c065E42B464ef38480778B0624A207A09042481',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 180,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 179,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 178,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 177,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 176,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 175,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 174,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 173,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 172,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 171,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 170,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 169,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 168,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 167,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 166,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 165,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 164,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 163,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 162,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 161,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 160,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 159,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 158,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 157,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 156,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 155,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n  //   },\n  //   token: tokens.yfii,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 154,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 153,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 152,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 151,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 150,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 149,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 148,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 147,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 146,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 145,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 144,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 143,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 142,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x473390697036E7611a670575eA9141583471fF47',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 141,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 140,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n  //   },\n  //   token: tokens.busd,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // /**\n  //  * All farms below here are from v1 and are to be set to 0x\n  //  */\n  // {\n  //   pid: 1,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n  //     56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 136,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 76,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 135,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 134,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 133,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 132,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 131,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 130,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 129,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 128,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 127,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 125,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 124,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 123,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 122,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 121,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 120,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 119,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 118,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 117,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 116,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 115,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 114,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 113,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 112,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 111,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 110,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 109,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 108,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 107,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 106,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 104,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 103,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 102,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 101,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 100,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 99,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 98,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 97,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 96,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 95,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 94,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 93,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 92,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 91,\n  //   lpSymbol: 'NULS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 90,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 89,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 88,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 87,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 86,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 85,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 84,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 83,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 82,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 81,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 80,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 79,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 78,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 77,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 75,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 74,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 73,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 72,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0392957571f28037607c14832d16f8b653edd472',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 71,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 70,\n  //   lpSymbol: 'BETH-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n  //   },\n  //   token: tokens.beth,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 69,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 68,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 67,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 66,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 65,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 63,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 62,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 61,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 60,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF609ade3846981825776068a8eD7746470029D1f',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 59,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 58,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 57,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 56,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   token: tokens.og,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   token: tokens.asr,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   token: tokens.atm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   token: tokens.juv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   token: tokens.psg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 2,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n  //   },\n  //   token: tokens.busd,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 14,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   token: tokens.yfii,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   token: tokens.xtz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   token: tokens.bch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   token: tokens.stax,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   token: tokens.nar,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   token: tokens.nya,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   token: tokens.bake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   token: tokens.burger,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   token: tokens.bake,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default farms\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\nexport const toggleMenu = createAction<boolean>('app/toggleMenu')\nexport default updateBlockNumber\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'DogeSon',\n  description:\n    ''\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('DogeSon')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('DogeSon')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('DogeSon')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width:100%;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  dogeson: {\n    symbol: 'dogeson',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babydoge: {\n    symbol: 'babydoge',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  minidoge: {\n    symbol: 'minidoge',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n}\n\nexport default tokens\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  width:100%;\n  margin-top:3%;\n  border-radius: 10px;\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  width:100%;\n  padding-top: 10px;\n  padding-bottom: 20px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries {\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n  menuToggled: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  menuToggled: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.dogeson,\n    earningToken: tokens.dogeson,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 202,\n    stakingToken: tokens.minidoge,\n    earningToken: tokens.minidoge,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: tokens.babydoge,\n    earningToken: tokens.babydoge,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  // {\n  //   sousId: 200,\n  //   stakingToken: tokens.axs,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00992',\n  // },\n  // {\n  //   sousId: 199,\n  //   stakingToken: tokens.bnb,\n  //   earningToken: tokens.bnb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.02696',\n  // },\n  // {\n  //   sousId: 198,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.trx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '9.6643',\n  // },\n  // {\n  //   sousId: 197,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.chess,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4286',\n  // },\n  // {\n  //   sousId: 196,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.titan,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08912',\n  // },\n  // {\n  //   sousId: 195,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.harmony,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.0092',\n  // },\n  // {\n  //   sousId: 194,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mask,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.06423',\n  // },\n  // {\n  //   sousId: 193,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dvi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.7233',\n  // },\n  // {\n  //   sousId: 192,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.gum,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.67129',\n  // },\n  // {\n  //   sousId: 191,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.adx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.7523',\n  // },\n  // {\n  //   sousId: 190,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.suter,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '69.9074',\n  // },\n  // {\n  //   sousId: 189,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bscpad,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3877',\n  // },\n  // {\n  //   sousId: 188,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.rabbit,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.993',\n  // },\n  // {\n  //   sousId: 187,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.waultx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '7.9108',\n  // },\n  // {\n  //   sousId: 186,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.wex,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '11.574',\n  // },\n  // {\n  //   sousId: 185,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.form,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.4467',\n  // },\n  // {\n  //   sousId: 184,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.orbs,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.8946',\n  // },\n  // {\n  //   sousId: 183,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.$dg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa07a91da6d10173f33c294803684bceede325957',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00135',\n  // },\n  // {\n  //   sousId: 182,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.woo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3854',\n  // },\n  // {\n  //   sousId: 181,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.woo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0003854',\n  // },\n  // {\n  //   sousId: 180,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.htb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '5.2083',\n  // },\n  // {\n  //   sousId: 179,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.jgn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1001',\n  // },\n  // {\n  //   sousId: 178,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dft,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 177,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hai,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.3078',\n  // },\n  // {\n  //   sousId: 176,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.o3,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.107638',\n  // },\n  // {\n  //   sousId: 175,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ampl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.398',\n  // },\n  // {\n  //   sousId: 174,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4843',\n  // },\n  // {\n  //   sousId: 173,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6741',\n  // },\n  // {\n  //   sousId: 172,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.marsh,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1108',\n  // },\n  // {\n  //   sousId: 171,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mbox,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4803',\n  // },\n  // {\n  //   sousId: 170,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ata,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 169,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.27777',\n  // },\n  // {\n  //   sousId: 168,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bcfx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6944',\n  // },\n  // {\n  //   sousId: 167,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.qkc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '15.9143',\n  // },\n  // {\n  //   sousId: 166,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ktn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01215',\n  // },\n  // {\n  //   sousId: 165,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mtrg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.05613',\n  // },\n  // {\n  //   sousId: 164,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tusd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.5787',\n  // },\n  // {\n  //   sousId: 163,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.vrt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '40.5092',\n  // },\n  // {\n  //   sousId: 162,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.kalm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0868',\n  // },\n  // {\n  //   sousId: 161,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ez,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01736',\n  // },\n  // {\n  //   sousId: 160,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.kalm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenPerBlock: '0.00868',\n  // },\n  // {\n  //   sousId: 159,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.popen,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.19097',\n  // },\n  // {\n  //   sousId: 158,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.023148',\n  // },\n  // {\n  //   sousId: 157,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.well,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2025',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 156,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.deri,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '1.6087',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 155,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.chr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '1.655',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 154,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cyc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD714738837944C3c592477249E8edB724A76e068',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00015914',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 153,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xend,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.31828',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 152,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hget,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.03553',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 151,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hotcross,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 150,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.rfox,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 149,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.wmass,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.24942',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 148,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ubxt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.4074',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 147,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.btr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.8935',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 146,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.τdoge,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.868',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 145,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pmon,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01261',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 144,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.one,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '57.87',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 143,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.fine,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1342',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 142,\n  //   stakingToken: tokens.doge,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01388',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 141,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bmxx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01331',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 140,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oin,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 139,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hyfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.8935',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 138,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.kun,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.23148',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 137,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.math,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.15798',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 136,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ust,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.17361',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 135,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.win,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '462.96',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 134,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.trx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '4.0509',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 133,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.btt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '79.86',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 132,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lmt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.66145',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 131,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pnt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.09548',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 130,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xmark,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0298',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 129,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4861',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 128,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hakka,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 127,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000031',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 126,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.003472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 125,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bbadger,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00265278',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 124,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bdigg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000403',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 123,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4629',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 122,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xed,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 121,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cgg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.10918',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 120,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.perl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 119,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.arpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.949',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 118,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.11284',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 117,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dexe,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.009837',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 116,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dfd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.46296',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 115,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.alpaca,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.22743',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 114,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.τbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000608',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 113,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.τbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000608',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 112,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swingby,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.21527',\n  // },\n  // {\n  //   sousId: 111,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xed,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 110,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hakka,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 109,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cgg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.10918',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 108,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mix,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3721',\n  // },\n  // {\n  //   sousId: 107,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.suter,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '15.3356',\n  // },\n  // {\n  //   sousId: 106,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.broobee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '14.4675',\n  // },\n  // {\n  //   sousId: 105,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hzn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6944',\n  // },\n  // {\n  //   sousId: 104,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.alpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.23495',\n  // },\n  // {\n  //   sousId: 103,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.perl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 102,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tlm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '17.361',\n  // },\n  // {\n  //   sousId: 101,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.jgn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08796',\n  // },\n  // {\n  //   sousId: 100,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.eps,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.07716',\n  // },\n  // {\n  //   sousId: 99,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.arpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.949',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 98,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.itam,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.096',\n  // },\n  // {\n  //   sousId: 97,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1329ad151dE6C441184E32E108401126AE850937',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4629',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 96,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tko,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  // },\n  // {\n  //   sousId: 95,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.apys,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x46530d79b238f809e80313e73715b160c66677aF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.09953',\n  // },\n  // {\n  //   sousId: 94,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hoo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.489',\n  // },\n  // {\n  //   sousId: 93,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.11284',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 92,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.easy,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0072338',\n  // },\n  // {\n  //   sousId: 91,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nrv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.15046',\n  // },\n  // {\n  //   sousId: 90,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dego,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00405',\n  // },\n  // {\n  //   sousId: 89,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.gum,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08912',\n  // },\n  // {\n  //   sousId: 88,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000031',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 87,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dft,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6811',\n  // },\n  // {\n  //   sousId: 86,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swth,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.3148',\n  // },\n  // {\n  //   sousId: 85,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.003472',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 84,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.zil,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.0995',\n  // },\n  // {\n  //   sousId: 83,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pcws,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00434',\n  // },\n  // {\n  //   sousId: 82,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bbadger,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00265278',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 81,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bdigg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000403',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 80,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lto,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.2893',\n  // },\n  // {\n  //   sousId: 79,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mir,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01273',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 78,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mir,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01273',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 77,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.trade,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4484',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 76,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dusk,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4629',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 75,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bifi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00007234',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 74,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.txl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.434027',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 73,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cos,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF682D186168b4114ffDbF1291F19429310727151',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '5.787',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 72,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bunny,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00289',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 71,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.alice,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.14467',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 70,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.for,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '2.8935',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 69,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bux,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5787',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 68,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nuls,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0868',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 67,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.belt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00868',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 66,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4861',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 65,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0001157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 64,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dexe,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.009837',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 63,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bel,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0549',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 62,\n  //   stakingToken: tokens.tpt,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0462',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 61,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tpt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '3.616',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 60,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.watch,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.3472',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 59,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xmark,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0413',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 58,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bmxx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 57,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.iotx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '6.365',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 56,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bor,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.000395',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 55,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bopen,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0723',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 54,\n  //   stakingToken: tokens.sushi,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0367',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 53,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dodo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0578',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 52,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swingby,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.13',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 51,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bry,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 50,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.zee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1736',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 49,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swgb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.899',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 48,\n  //   stakingToken: tokens.comp,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.055',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 47,\n  //   stakingToken: tokens.comp,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.55',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 46,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.sfp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.6',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 45,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lina,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 44,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lina,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 43,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lit,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.231',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 42,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hget,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0138',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 41,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bdo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.075',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 40,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.egld,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.001215',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 39,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ust,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 38,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.wsote,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.23',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 37,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.front,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2546',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 36,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.helmet,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.81',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 35,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.btcst,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.011574',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 34,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bscx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.17361',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 33,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ten,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.05787',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 32,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.balbt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4166',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 31,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.asr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 30,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.atm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 29,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.og,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 28,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.reef,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '115.74',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 27,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ditto,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 26,\n  //   stakingToken: tokens.twt,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 24,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.juv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 25,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.psg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 21,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.vai,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.104',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  //  {\n  //   sousId: 20,\n  //   stakingToken: tokens.bnb,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n  //   },\n  //   poolCategory: PoolCategory.BINANCE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  //  {\n  //   sousId: 19,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bnb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0041',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 18,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.blink,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 17,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.blink,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 16,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.unfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02893',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 15,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.twt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 14,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hard,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.346',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 13,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.broobee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '12.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 12,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.stax,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 11,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nar,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '1',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 10,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nya,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '10',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 9,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ctk,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 8,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.twt,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 7,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.inj,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.25',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n]\n\nexport default pools\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n"],"sourceRoot":""}