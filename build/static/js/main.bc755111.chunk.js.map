{"version":3,"sources":["components/Card/index.tsx","config/localization/languages.ts","state/transactions/hooks.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","utils/compoundApyHelpers.ts","state/farms/hooks.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/usePairs.ts","hooks/useDebounce.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/ConnectWalletButton.tsx","components/Tags.tsx","utils/wallet.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","config/constants/nfts.ts","state/teams/index.tsx","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","hooks/useRefresh.ts","utils/calls/farms.ts","components/App/Settings/TransactionSettings.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","hooks/useAuth.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","components/Layout/Row.tsx","components/Loader/Dots.tsx","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/teams/helpers.ts","config/constants/teams.ts","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useActiveWeb3React.ts","components/TokenImage/index.tsx","config/constants/meta.ts","components/Layout/Page.tsx","config/constants/ifo.ts","components/Layout/Container.tsx","components/ApyCalculatorModal/index.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","state/mint/actions.ts","utils/contenthashToUri.ts","utils/collectibles.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","hooks/usePreviousValue.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/swap/actions.ts","components/Layout/Column.tsx","state/burn/actions.ts","hooks/usePersistState.ts","utils/bigNumber.ts","utils/latinise.ts","utils/formatBalance.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/PositionCard/index.tsx","components/PageHeader/PageHeader.tsx","config/constants/tokens.ts","utils/index.ts","config/constants/index.ts","utils/farmHelpers.ts","utils/apr.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/SearchInput/SearchInput.tsx","utils/contractHelpers.ts","config/constants/types.ts","utils/multicall.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/user/hooks/index.tsx","components/Balance.tsx","utils/wrappedCurrency.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","state/predictions/helpers.ts","config/constants/endpoints.ts","state/predictions/queries.ts","state/predictions/index.ts","config/constants/campaigns.ts","state/achievements/index.ts","state/collectibles/index.ts","state/voting/helpers.ts","state/voting/index.tsx","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","views/Pools/helpers.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","state/block/hooks.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","state/profile/hooks.ts","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","routerHistory.ts","contexts/Localization/translationsContext.ts","hooks/useI18n.ts","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","hooks/useLastUpdated.ts","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/hooks/useWithdrawalFeeTimer.ts","utils/getTimePeriods.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx","state/lists/actions.ts","state/user/actions.ts","components/QuestionHelper/index.tsx","utils/prices.ts","state/multicall/actions.ts","config/constants/pools.ts","hooks/useToast.ts","state/wallet/hooks.ts","utils/providers.ts","hooks/useTheme.ts"],"names":["Card","styled","Box","width","padding","border","borderRadius","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","EN","locale","language","code","languages","languageList","Object","values","useTransactionAdder","useActiveWeb3React","chainId","account","dispatch","useDispatch","useCallback","response","summary","approval","claim","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","s","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","allTransactions","useMemo","keys","some","receipt","useSwapState","swap","useSwapActionHandlers","onCurrencySelection","field","currency","selectCurrency","currencyId","Token","address","ETHER","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","value","typedValueParsed","parseUnits","decimals","toString","TokenAmount","JSBI","BigInt","CurrencyAmount","ether","error","console","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","token","pairs","pair","liquidityToken","useDerivedSwapInfo","inputError","t","useTranslation","independentField","inputCurrencyId","Field","INPUT","outputCurrencyId","OUTPUT","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","undefined","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","currencies","formattedTo","isAddress","indexOf","useUserSlippageTolerance","allowedSlippage","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","balanceIn","amountIn","lessThan","symbol","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","test","validatedRecipient","exactAmount","isNaN","parseFloat","toLowerCase","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","length","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","useState","result","setResult","useEffect","parsed","replaceSwapState","createAction","clearAllTransactions","finalizeTransaction","checkedTransaction","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","toFixed","getRoi","amountEarned","amountInvested","usePollFarmsData","includeArchive","useAppDispatch","useRefresh","slowRefresh","useWeb3React","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","farms","useFarmFromPid","data","find","f","useFarmUser","farm","allowance","userData","BigNumber","BIG_ZERO","tokenBalance","stakedBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","times","tokenAmountTotal","totalLpTokens","getBalanceAmount","div","usePriceCakeBusd","cakeBnbFarm","priceHelperLps","lpAddresses","tokens","qsd","quoteToken","wbnb","fetchFarm","a","lpAddress","getAddress","calls","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","filter","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","initialState","loadArchivedFarmsData","userDataLoaded","isArchivedPid","createAsyncThunk","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getProfileContract","getUsername","fetch","process","ok","json","username","getProfile","hasRegistered","profile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","set","avatar","images","sm","domain","secure","expires","isInitialized","isLoading","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","wrappedCurrency","pairAddresses","tokenA","tokenB","equals","Pair","results","useMultipleContractSingleData","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","usePair","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","getTokenLogoURL","StyledLogo","Logo","size","CurrencyLogo","style","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","srcs","alt","syrup","cake","busd","isZero","hexNumberString","LS_KEY","fetchLocale","getLanguageCodeFromLS","localStorage","getItem","isFetching","currentLanguage","languageMap","Map","translations","LanguageContext","createContext","LanguageProvider","children","codeFromStorage","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","has","setItem","translate","key","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","Provider","languageContext","useContext","ConnectWalletButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","CoreTag","variant","outline","startIcon","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","setupNetwork","provider","window","ethereum","parseInt","request","method","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","type","options","image","BASE_URL","tokenAdded","useBlockNumber","application","blockNumber","uriToHttp","uri","split","substr","serializeToken","deserializeToken","serializedToken","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","sortOrder","identifier","variationId","video","webm","mp4","blur","teamsList","reduce","accum","id","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","Wrapper","Section","AutoColumn","ConfirmedIcon","ColumnCenter","ConfirmationPendingContent","pendingText","gap","justify","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","library","strokeWidth","external","href","getBscScanLink","isMetaMask","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","inputAmount","outputAmount","equalTo","executionPrice","raw","multiply","add","ONE_HUNDRED_PERCENT","useAllCommonPairs","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","memo","curr","currencyAmountIn","currencyOut","allowedPairs","useUserSingleHopOnly","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","RefreshContext","fast","slow","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","amount","DEFAULT_TOKEN_DECIMAL","enterStaking","wait","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","rawSlippage","setRawSlippage","deadline","setDeadline","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","Row","QuestionHelper","text","flexWrap","gridTemplateColumns","gridGap","mb","scale","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","paddingTop","pl","SettingsModal","showConfirmExpertModal","setShowConfirmExpertModal","userSlippageTolerance","setUserslippageTolerance","useUserTransactionTTL","ttl","setTtl","useExpertModeManager","expertMode","toggleExpertMode","setSingleHopOnly","useAudioModeManager","audioPlay","toggleSetAudioMode","onBack","maxWidth","prompt","checked","alignItems","SettingsTab","useModal","onPresentSettingsModal","show","p","TransactionState","primary","IconWrapper","pending","success","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","sort","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","as","Link","BodyWrapper","AppBody","blockSlice","currentBlock","initialBlock","setBlock","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","activate","deactivate","toastError","useToast","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","walletconnect","close","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","urls","url","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","Contract","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","ChainId","MAINNET","sendDispatch","requestId","nanoid","fetchTokenList","then","tokenList","catch","rejected","errorMessage","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","align","textSubtle","inputRegex","Input","React","event","nextUserInput","escapeRegExp","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","useCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","toSignificant","className","val","currency0","currency1","margin","marginRight","slice","filterTokens","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","every","sp","startsWith","endsWith","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","push","trim","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","ethers","providers","Web3Provider","RowBetween","AutoRow","RowFixed","Dots","span","useTotalSupply","contract","useTokenContract","totalSupply","useUserAddedTokens","serializedTokensMap","user","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","users","toNumber","getTeams","teamsById","numberTeams","nbTeams","multicallv2","profileABI","teamData","onChainTeamData","teams","textColor","mediaQueries","BubbleWrapper","Footer","activeIndex","flexGrow","src","height","StyledNav","nav","Nav","pathname","location","StyledPage","gradients","bubblegum","xs","Page","SubNav","web3React","refEth","useRef","simpleRpcProvider","setprovider","current","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","DEFAULT_META","PageMeta","cakePriceUsd","cakePriceUsdDisplay","gt","toLocaleString","minimumFractionDigits","maximumFractionDigits","pageMeta","getCustomMeta","pageTitle","join","property","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","kalm","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","px","mx","Grid","GridItem","GridHeaderItem","BulletList","ul","ApyCalculatorModal","apr","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","textTransform","num","freq","fee","useTransactionDeadline","userDeadline","blockTimestamp","useMulticallContract","useCurrentBlockTimestamp","updateBlockNumber","ERC20_INTERFACE","ERC20_ABI","ERC20_BYTES32_ABI","resetMintState","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getTokenUriData","getErc721Contract","tokenURI","uriDataResponse","uriData","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","usePreviousValue","ref","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","refresh","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","useAddUserToken","inactiveTokenList","useCombinedInactiveList","list","substring","gridTemplateRows","userSelect","disabled","maxAmountSpend","currencyAmount","greaterThan","MIN_BNB","subtract","ens","resolvedContentHash","useENSContentHash","Column","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","JSON","setValue","stringify","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","Latinise","latin_map","τ","Τ","latinise","x","getDecimalAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","displayDecimals","formatNumber","number","minPrecision","maxPrecision","ZERO","useMintState","mint","ConfirmAddModalBottom","noLiquidity","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_A","CURRENCY_B","invert","PoolPriceBar","assetA","assetB","ONE_BIPS","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","WETH","useIsExpertMode","otherTypedValue","dependentField","pairState","equal","balances","independentAmount","dependentAmount","wrappedIndependentAmount","wrappedCurrencyAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","Percent","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","useApproveCallback","ROUTER_ADDRESS","approvalA","approveACallback","approvalB","approveBCallback","router","getRouterContract","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","tokenBIsETH","estimate","estimateGas","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","calculateGasMargin","err","modalHeader","my","slippage","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","ApprovalState","NOT_APPROVED","PENDING","APPROVED","minWidth","marginTop","showUnwrapped","FixedHeightRow","MinimalPositionCard","unwrappedToken","showMore","setShowMore","userPoolBalance","useTokenBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","BIG_INT_ZERO","Outer","Inner","PageHeader","CAKE","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","projectLink","dogeson","babydoge","minidoge","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","BASE_BSC_SCAN_URLS","shortenAddress","chars","mul","basisPointsToPercent","divide","getContract","ABI","AddressZero","getSigner","connectUnchecked","getProviderOrSigner","_","IUniswapV2Router02ABI","string","isTokenOnList","defaultTokens","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","exponentiate","BLOCKED_ADDRESSES","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","CAKE_PER_YEAR","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","MULTICALL_NETWORKS","useERC20","getBep20Contract","useCake","getCakeContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","useCakeVaultContract","getCakeVaultContract","useContract","withSignerIfPossible","useWETHContract","WETH_ABI","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","usePairContract","pairAddress","MULTICALL_ABI","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","useIsUserAddedToken","useIsTokenActive","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","Balance","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","useCombinedActiveList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","inactiveTokens","useAllInactiveTokens","showImport","itemKey","itemCount","itemSize","useTokenComparator","inverted","useAllTokenBalances","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","allTokens","useAllTokens","searchToken","useToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","useFoundOnInactiveList","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","lists","byUrl","pendingUpdate","useIsListActive","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","confirm","removeList","handleEnableList","enableList","handleDisableList","disableList","useTooltip","major","minor","patch","placement","trigger","targetRef","tooltipVisible","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","UNSUPPORTED_LIST_URLS","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","ManageTokens","userAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","useTheme","adding","loadingRequestId","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","config","manage","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","abi","signer","signerOrProvider","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","poolsConfig","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","PoolIds","LotteryStatus","multi","itf","utils","calldata","call","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","requireSuccess","tryAggregate","DoubleCurrencyLogo","StyledListLogo","ListLogo","useTokensFromMap","tokenMap","includeUserAdded","mapWithoutUrls","newMap","tokenMap_","activeTokensAddresses","useUnsupportedTokenList","activeTokens","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","tokenContract","tokenContractBytes32","tokenName","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","isBNB","muteAudio","unmuteAudio","userExpertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","serializePair","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","useTrackedTokenPairs","pinnedPairs","generatedPairs","savedSerializedPairs","userPairs","forChain","pairId","combinedList","keyed","sorted","isDisabled","unit","prefix","previousValue","start","end","suffix","duration","separator","isMethodArg","isValidMethodArgs","Array","isArray","xi","INVALID_RESULT","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","c","toCallKey","callKeys","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","callData","useTokenAllowance","owner","amountToApprove","currentAllowance","pendingApproval","approvalState","UNKNOWN","approve","useExact","MaxUint256","estimatedGas","useApproveCallbackFromTrade","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Result","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_BASE_URL","SNAPSHOT_API","numberOrNull","valueNum","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","block","totalBets","totalBNB","round","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startBlock","startAt","lockAt","lockBlock","lockPrice","endBlock","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getBetHistory","where","first","skip","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","currentEpoch","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","campaigns","badge","campaignMap","campaign","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","getBlockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","getState","proposalVotes","voting","votingSlice","_inValid","IDLE","TICKET_LIMIT_PER_REQUEST","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","roundId","hasRoundBeenClaimed","tickets","ticket","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","createReducer","Math","max","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","removeSerializedPair","tokenAAddress","tokenBAddress","toggleTheme","now","txs","lastCheckedBlockNumber","confirmedTime","otherField","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","getVersionUpgrade","VersionUpgrade","NONE","addList","u","lastInitializedSet","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profileReducer","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BASE_ADD_LIQUIDITY_URL","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","tagId","combineMaps","map1","map2","useCombinedTokenMapFromUrls","currentUrl","assign","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","isFinished","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","shares","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","convertSharesToCake","totalShares","pricePerFullShare","totalCakeInVault","cakeAsBigNumber","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","userShares","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","cakeVault","fees","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","earningTokenPrice","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","ViewMode","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useBlock","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","Menu","hasProfile","useProfile","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","PageLoader","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","createBrowserHistory","defaultTranslationState","setTranslations","TranslationsContext","useI18n","translationId","foundTranslation","translation","stringId","includesVariable","isEmpty","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","radii","StyledCardHeader","isStaking","isCakePool","PromotedGradient","StyledCard","isPromoted","isDesktop","StyledCardInner","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","ApprovalAction","stakingTokenContract","endIcon","spin","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","floor","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","harvest","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","stakingTokenSymbol","showStakedTag","showSubtitle","HelpIconWrapper","EarningsCell","lastActionInMs","dateStringToDisplay","labelText","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","HarvestAction","actionTitle","alignSelf","lineHeight","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","isVaultApproved","setIsVaultApproved","cakeContract","checkApprovalStatus","useCheckVaultApprovalStatus","useVaultApprove","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","performanceFeeAsDecimal","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Label","DetailPlaceholder","Value","CardTitle","Pools","TranslateString","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","orderBy","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","priceImpact","warningSeverity","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","paddingLeft","formatExecutionPrice","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Farms","lazy","FarmAuction","NotFound","Liquidity","PoolFinder","RemoveLiquidity","usePollBlockNumber","useFetchProfile","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById","QuestionWrapper","BASE_FEE","INPUT_FRACTION_AFTER_FEE","currentFee","priceImpactWithoutFeeFraction","numerator","denominator","quotient","pct","maximumAmountIn","minimumAmountOut","LOWER_HEX_REGEX","pcs","CORE","toastContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","anyLoading","callState","useTokenBalances","ethBalance","uncheckedAddresses","useBNBBalances","RPC_URL","getRpcUrl","JsonRpcProvider","StyledThemeContext"],"mappings":"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","file":"static/js/main.bc755111.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'Dogeson-bnb',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'Dogeson-busd',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'Dogeson-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  // {\n  //   pid: 431,\n  //   lpSymbol: 'C98-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n  //   },\n  //   token: tokens.c98,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 430,\n  //   lpSymbol: 'AXS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n  //   },\n  //   token: tokens.axs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 379,\n  //   lpSymbol: 'PMON-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n  //   },\n  //   token: tokens.pmon,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 368,\n  //   lpSymbol: 'TRX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n  //   },\n  //   token: tokens.trx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 429,\n  //   lpSymbol: 'CHESS-USDC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n  //   },\n  //   token: tokens.chess,\n  //   quoteToken: tokens.usdc,\n  // },\n  // {\n  //   pid: 428,\n  //   lpSymbol: 'TITAN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n  //   },\n  //   token: tokens.titan,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 427,\n  //   lpSymbol: 'ONE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n  //   },\n  //   token: tokens.harmony,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 426,\n  //   lpSymbol: 'MASK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n  //   },\n  //   token: tokens.mask,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 425,\n  //   lpSymbol: 'DVI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n  //   },\n  //   token: tokens.dvi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 339,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 424,\n  //   lpSymbol: 'ADX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n  //   },\n  //   token: tokens.adx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 423,\n  //   lpSymbol: 'USDC-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.usdt,\n  // },\n  // {\n  //   pid: 422,\n  //   lpSymbol: 'CAKE-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.usdt,\n  // },\n  // {\n  //   pid: 357,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 421,\n  //   lpSymbol: 'BSCPAD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n  //   },\n  //   token: tokens.bscpad,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 420,\n  //   lpSymbol: 'RABBIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n  //   },\n  //   token: tokens.rabbit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 419,\n  //   lpSymbol: 'WAULTx-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e4370204f598205998143F07ebCC486E441b456',\n  //   },\n  //   token: tokens.waultx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 418,\n  //   lpSymbol: 'WEX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n  //   },\n  //   token: tokens.wex,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 417,\n  //   lpSymbol: 'FORM-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n  //   },\n  //   token: tokens.form,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 416,\n  //   lpSymbol: 'ORBS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n  //   },\n  //   token: tokens.orbs,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 415,\n  //   lpSymbol: 'DG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n  //   },\n  //   token: tokens.$dg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 414,\n  //   lpSymbol: 'WOO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n  //   },\n  //   token: tokens.woo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 413,\n  //   lpSymbol: 'HTB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n  //   },\n  //   token: tokens.htb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 351,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 337,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 412,\n  //   lpSymbol: 'HAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n  //   },\n  //   token: tokens.hai,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 411,\n  //   lpSymbol: 'O3-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n  //   },\n  //   token: tokens.o3,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 410,\n  //   lpSymbol: 'AMPL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n  //   },\n  //   token: tokens.ampl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 343,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 409,\n  //   lpSymbol: 'ETH-USDC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.usdc,\n  // },\n  // {\n  //   pid: 408,\n  //   lpSymbol: 'BTCB-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 347,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 407,\n  //   lpSymbol: 'MARSH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n  //   },\n  //   token: tokens.marsh,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 406,\n  //   lpSymbol: 'BORING-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n  //   },\n  //   token: tokens.boring,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 405,\n  //   lpSymbol: 'MBOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n  //   },\n  //   token: tokens.mbox,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 404,\n  //   lpSymbol: 'ATA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xef7767677867552cfa699148b96a03358a9be779',\n  //   },\n  //   token: tokens.ata,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 403,\n  //   lpSymbol: 'MX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n  //   },\n  //   token: tokens.mx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 402,\n  //   lpSymbol: 'bCFX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n  //   },\n  //   token: tokens.bcfx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 401,\n  //   lpSymbol: 'QKC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n  //   },\n  //   token: tokens.qkc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 400,\n  //   lpSymbol: 'KTN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n  //   },\n  //   token: tokens.ktn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 399,\n  //   lpSymbol: 'MTRG-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n  //   },\n  //   token: tokens.mtrg,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 398,\n  //   lpSymbol: 'SWG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n  //   },\n  //   token: tokens.swg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 397,\n  //   lpSymbol: 'TUSD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n  //   },\n  //   token: tokens.tusd,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 396,\n  //   lpSymbol: 'VRT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n  //   },\n  //   token: tokens.vrt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 395,\n  //   lpSymbol: 'EZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n  //   },\n  //   token: tokens.ez,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 394,\n  //   lpSymbol: 'KALM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n  //   },\n  //   token: tokens.kalm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 393,\n  //   lpSymbol: 'pOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n  //   },\n  //   token: tokens.popen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 335,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 392,\n  //   lpSymbol: 'WELL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n  //   },\n  //   token: tokens.well,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 391,\n  //   lpSymbol: 'DERI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n  //   },\n  //   token: tokens.deri,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 390,\n  //   lpSymbol: 'CHR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n  //   },\n  //   token: tokens.chr,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 389,\n  //   lpSymbol: 'CAKE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 388,\n  //   lpSymbol: 'CYC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n  //   },\n  //   token: tokens.cyc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 387,\n  //   lpSymbol: 'XEND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n  //   },\n  //   token: tokens.xend,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 296,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 386,\n  //   lpSymbol: 'HOTCROSS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n  //   },\n  //   token: tokens.hotcross,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 385,\n  //   lpSymbol: 'RFOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n  //   },\n  //   token: tokens.rfox,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 384,\n  //   lpSymbol: 'WMASS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n  //   },\n  //   token: tokens.wmass,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 383,\n  //   lpSymbol: 'UBXT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n  //   },\n  //   token: tokens.ubxt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 381,\n  //   lpSymbol: 'BTR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n  //   },\n  //   token: tokens.btr,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 380,\n  //   lpSymbol: 'τDOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n  //   },\n  //   token: tokens.τdoge,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 378,\n  //   lpSymbol: 'ONE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n  //   },\n  //   token: tokens.one,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 377,\n  //   lpSymbol: 'FINE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n  //   },\n  //   token: tokens.fine,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 376,\n  //   lpSymbol: 'DOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n  //   },\n  //   token: tokens.doge,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 310,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 375,\n  //   lpSymbol: 'OIN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n  //   },\n  //   token: tokens.oin,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 374,\n  //   lpSymbol: 'HYFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n  //   },\n  //   token: tokens.hyfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 373,\n  //   lpSymbol: 'KUN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n  //   },\n  //   token: tokens.kun,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 372,\n  //   lpSymbol: 'KUN-QSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n  //   },\n  //   token: tokens.kun,\n  //   quoteToken: tokens.qsd,\n  // },\n  // {\n  //   pid: 371,\n  //   lpSymbol: 'MATH-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n  //   },\n  //   token: tokens.math,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 370,\n  //   lpSymbol: 'mCOIN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n  //   },\n  //   token: tokens.mcoin,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 369,\n  //   lpSymbol: 'WIN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n  //   },\n  //   token: tokens.win,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 367,\n  //   lpSymbol: 'BTT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n  //   },\n  //   token: tokens.btt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 366,\n  //   lpSymbol: 'PNT-pBTC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n  //   },\n  //   token: tokens.pnt,\n  //   quoteToken: tokens.pbtc,\n  // },\n  // {\n  //   pid: 311,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 365,\n  //   lpSymbol: 'BTCB-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 364,\n  //   lpSymbol: 'LMT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n  //   },\n  //   token: tokens.lmt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 363,\n  //   lpSymbol: 'DFD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n  //   },\n  //   token: tokens.dfd,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 362,\n  //   lpSymbol: 'ALPACA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n  //   },\n  //   token: tokens.alpaca,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 361,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 304,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 360,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 359,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 358,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 356,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 355,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 354,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 353,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 352,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 350,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 349,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 348,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 346,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 345,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 344,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 342,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 341,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 340,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 338,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 336,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 334,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 333,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 332,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 331,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 330,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 329,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 328,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 327,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 326,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 325,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 324,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 323,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 322,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 321,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 320,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 319,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x853784B7BDe87d858555715c0123374242db7943',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 318,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 317,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 316,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 315,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 314,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 313,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 312,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 309,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 308,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 307,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 306,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 305,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 303,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 302,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 301,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 300,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 299,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 298,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 297,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 295,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 294,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 293,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 292,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 291,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 290,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 289,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 288,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 287,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 286,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 285,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 284,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 283,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 282,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 281,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 280,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 279,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 278,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 277,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 276,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 275,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 274,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 273,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 272,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 271,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 270,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 269,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 268,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 267,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 266,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 265,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 264,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 263,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 262,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 261,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 260,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 259,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 258,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 257,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 256,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 255,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 254,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 253,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // /**\n  //  * V2 farms, set to be removed once unstaked\n  //  */\n  // {\n  //   pid: 139,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 250,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 193,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 249,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 248,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 247,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 246,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 245,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 244,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 243,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 242,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 241,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 240,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 239,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 238,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 237,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 236,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 235,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 234,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 233,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 232,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 231,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 230,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 229,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 228,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 227,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 226,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 225,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 224,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 223,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 222,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe3D941e74141311436F82523817EBaa26462967d',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 221,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 220,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 219,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 218,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 217,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 216,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 215,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 214,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 213,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 212,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 211,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 210,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 209,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 208,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 207,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 206,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 205,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 204,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 203,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 202,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 201,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 200,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 199,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 198,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 197,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 196,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 195,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 194,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 192,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 191,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 190,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 189,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 188,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 187,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 186,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 185,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 184,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 183,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 182,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 181,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2c065E42B464ef38480778B0624A207A09042481',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 180,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 179,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 178,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 177,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 176,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 175,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 174,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 173,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 172,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 171,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 170,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 169,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 168,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 167,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 166,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 165,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 164,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 163,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 162,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 161,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 160,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 159,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 158,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 157,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 156,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 155,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n  //   },\n  //   token: tokens.yfii,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 154,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 153,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 152,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 151,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 150,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 149,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 148,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 147,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 146,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 145,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 144,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 143,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 142,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x473390697036E7611a670575eA9141583471fF47',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 141,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 140,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n  //   },\n  //   token: tokens.busd,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // /**\n  //  * All farms below here are from v1 and are to be set to 0x\n  //  */\n  // {\n  //   pid: 1,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n  //     56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n  //   },\n  //   token: tokens.cake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 136,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n  //   },\n  //   token: tokens.τbtc,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 76,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n  //   },\n  //   token: tokens.swingby,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 135,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n  //   },\n  //   token: tokens.xed,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 134,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n  //   },\n  //   token: tokens.hakka,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 133,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n  //   },\n  //   token: tokens.cgg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 132,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n  //   },\n  //   token: tokens.suter,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 131,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 130,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n  //   },\n  //   token: tokens.hzn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 129,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n  //   },\n  //   token: tokens.alpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 128,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n  //   },\n  //   token: tokens.perl,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 127,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n  //   },\n  //   token: tokens.tlm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 125,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n  //   },\n  //   token: tokens.jgn,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 124,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n  //   },\n  //   token: tokens.eps,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 123,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n  //   },\n  //   token: tokens.arpa,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 122,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n  //   },\n  //   token: tokens.itam,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 121,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n  //   },\n  //   token: tokens.bondly,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 120,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n  //   },\n  //   token: tokens.tko,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 119,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n  //   },\n  //   token: tokens.apys,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 118,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n  //   },\n  //   token: tokens.hoo,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 117,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n  //   },\n  //   token: tokens.oddz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 116,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n  //   },\n  //   token: tokens.easy,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 115,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n  //   },\n  //   token: tokens.nrv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 114,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n  //   },\n  //   token: tokens.dego,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 113,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n  //   },\n  //   token: tokens.gum,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 112,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n  //   },\n  //   token: tokens.pbtc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 111,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n  //   },\n  //   token: tokens.dft,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 110,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n  //   },\n  //   token: tokens.swth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 109,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n  //   },\n  //   token: tokens.lien,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 108,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n  //   },\n  //   token: tokens.zil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 107,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n  //   },\n  //   token: tokens.pcws,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 106,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n  //   },\n  //   token: tokens.bbadger,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 104,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n  //   },\n  //   token: tokens.bdigg,\n  //   quoteToken: tokens.btcb,\n  // },\n  // {\n  //   pid: 103,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n  //   },\n  //   token: tokens.lto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 102,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n  //   },\n  //   token: tokens.mir,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 101,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n  //   },\n  //   token: tokens.trade,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 100,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n  //   },\n  //   token: tokens.dusk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 99,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n  //   },\n  //   token: tokens.bifi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 98,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n  //   },\n  //   token: tokens.txl,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 97,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n  //   },\n  //   token: tokens.cos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 96,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n  //   },\n  //   token: tokens.bunny,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 95,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n  //   },\n  //   token: tokens.alice,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 94,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n  //   },\n  //   token: tokens.for,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 93,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n  //   },\n  //   token: tokens.bux,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 92,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 91,\n  //   lpSymbol: 'NULS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n  //   },\n  //   token: tokens.nuls,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 90,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n  //   },\n  //   token: tokens.belt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 89,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n  //   },\n  //   token: tokens.ramp,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 88,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n  //   },\n  //   token: tokens.bfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 87,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n  //   },\n  //   token: tokens.dexe,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 86,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n  //   },\n  //   token: tokens.bel,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 85,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n  //   },\n  //   token: tokens.tpt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 84,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n  //   },\n  //   token: tokens.watch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 83,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n  //   },\n  //   token: tokens.xmark,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 82,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n  //   },\n  //   token: tokens.bmxx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 81,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n  //   },\n  //   token: tokens.iotx,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 80,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n  //   },\n  //   token: tokens.bor,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 79,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n  //   },\n  //   token: tokens.bopen,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 78,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n  //   },\n  //   token: tokens.sushi,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 77,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n  //   },\n  //   token: tokens.dodo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 75,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n  //   },\n  //   token: tokens.bry,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 74,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n  //   },\n  //   token: tokens.zee,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 73,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n  //   },\n  //   token: tokens.swgb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 72,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0392957571f28037607c14832d16f8b653edd472',\n  //   },\n  //   token: tokens.comp,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 71,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n  //   },\n  //   token: tokens.sfp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 70,\n  //   lpSymbol: 'BETH-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n  //   },\n  //   token: tokens.beth,\n  //   quoteToken: tokens.eth,\n  // },\n  // {\n  //   pid: 69,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n  //   },\n  //   token: tokens.lina,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 68,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n  //   },\n  //   token: tokens.lit,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 67,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n  //   },\n  //   token: tokens.hget,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 66,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n  //   },\n  //   token: tokens.bdo,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 65,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n  //   },\n  //   token: tokens.egld,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 63,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n  //   },\n  //   token: tokens.ust,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 62,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n  //   },\n  //   token: tokens.mamzn,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 61,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n  //   },\n  //   token: tokens.mgoogl,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 60,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF609ade3846981825776068a8eD7746470029D1f',\n  //   },\n  //   token: tokens.mnflx,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 59,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n  //   },\n  //   token: tokens.mtsla,\n  //   quoteToken: tokens.ust,\n  // },\n  // {\n  //   pid: 58,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n  //   },\n  //   token: tokens.wsote,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 57,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n  //   },\n  //   token: tokens.front,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 56,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n  //   },\n  //   token: tokens.helmet,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   token: tokens.btcst,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   token: tokens.ltc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   token: tokens.bscx,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   token: tokens.ten,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   token: tokens.balbt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   token: tokens.og,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   token: tokens.asr,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   token: tokens.atm,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   token: tokens.reef,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   token: tokens.ditto,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   token: tokens.juv,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   token: tokens.psg,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   token: tokens.unfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   token: tokens.vai,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   token: tokens.blink,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   token: tokens.hard,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 2,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n  //   },\n  //   token: tokens.busd,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   token: tokens.ada,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   token: tokens.band,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   token: tokens.dot,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   token: tokens.eos,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   token: tokens.link,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.busd,\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   token: tokens.twt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   token: tokens.xvs,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 14,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n  //   },\n  //   token: tokens.eth,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   token: tokens.btcb,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   token: tokens.alpha,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   token: tokens.usdt,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   token: tokens.xrp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   token: tokens.atom,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   token: tokens.yfii,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   token: tokens.dai,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   token: tokens.xtz,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   token: tokens.bch,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   token: tokens.yfi,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   token: tokens.uni,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   token: tokens.fil,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   token: tokens.inj,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   token: tokens.sxp,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   token: tokens.ctk,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   token: tokens.stax,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   token: tokens.nar,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   token: tokens.nya,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   token: tokens.broobee,\n  //   quoteToken: tokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   token: tokens.bake,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   token: tokens.burger,\n  //   quoteToken: tokens.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   token: tokens.bake,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default farms\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Audio')}</Text>\n              <QuestionHelper text={t('🐰 Turn down your volume a bit before you swap')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} />\n          </Flex>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            V1 (old)\n          </ButtonMenuItem>\n        </ButtonMenu>\n        <LinkExternal\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal>\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'DogeSon',\n  description:\n    ''\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('DogeSon')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('DogeSon')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('DogeSon')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  dogeson: {\n    symbol: 'dogeson',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babydoge: {\n    symbol: 'babydoge',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  minidoge: {\n    symbol: 'minidoge',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n}\n\nexport default tokens\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries {\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  // {\n  //   label: t('Home'),\n  //   icon: 'HomeIcon',\n  //   href: '/',\n  // },\n  // {\n  //   label: t('Trade'),\n  //   icon: 'TradeIcon',\n  //   items: [\n  //     {\n  //       label: t('Exchange'),\n  //       href: '/swap',\n  //     },\n  //     {\n  //       label: t('Liquidity'),\n  //       href: '/pool',\n  //     },\n  //     {\n  //       label: t('LP Migration'),\n  //       href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n  //     },\n  //   ],\n  // },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  //   status: {\n  //     text: t('Win').toLocaleUpperCase(),\n  //     color: 'success',\n  //   },\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   href: 'https://pancakeswap.info',\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.pancakeswap.finance/contact-us',\n      },\n      {\n        label: t('Voting'),\n        href: '/voting',\n      },\n      {\n        label: t('Github'),\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://pancakeswap.medium.com',\n      },\n      {\n        label: t('Merch'),\n        href: 'https://pancakeswap.creator-spring.com/',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localization/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon,Image, Button } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { CommunityTag } from 'components/Tags'\n\nimport AprRow from './AprRow'\nimport StyledCardHeader from './StyledCardHeader'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport CardActions from './CardActions'\n\n\n\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <ConnectWalletButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n    \n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\nimport { StyledCard, StyledCardInner } from './components/PoolCard/StyledCard';\n\n// import Coming from './components/Coming'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\n\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    // const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        // pool.isAutoVault ? (\n        //   <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        // ) :\n         (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        )\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            {/* <HelpButton />\n            <BountyCard /> */}\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n       \n\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n          \n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n     \n        <StyledCard >\n        <div style={{ padding: '24px' }}>\n          <CardTitle>\n            {TranslateString(414, 'Your Project?')}{' '}\n            <span role=\"img\" aria-label=\"eyes\">\n              👀\n            </span>\n          </CardTitle>\n          <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n          <Balance>???</Balance>\n          <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n          <Button\n            variant=\"secondary\"\n            as=\"a\"\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n            external\n            width=\"100%\"\n            mb=\"16px\"\n          >\n            {TranslateString(418, 'Apply Now')}\n          </Button>\n          <DetailPlaceholder>\n            <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n            <Value>??</Value>\n          </DetailPlaceholder>\n          <DetailPlaceholder>\n            <div style={{ flex: 1 }}>\n              <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n              </span>\n              {TranslateString(384, 'Your Stake')}:\n            </div>\n            <Value>???</Value>\n          </DetailPlaceholder>\n        </div>\n        <Footer>\n          <CommunityTag />\n        </Footer>\n      </StyledCard>\n        <div ref={loadMoreRef} />\n        {/* <Coming /> */}\n        {/* <Image\n          mx=\"auto\"ges/decorations/3d-s\n          mt=\"12px\"\n          src=\"/imayrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards CAKE buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards CAKE buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\n// const Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Collectibles = lazy(() => import('./views/Collectibles'))\n// const Teams = lazy(() => import('./views/Teams'))\n// const Team = lazy(() => import('./views/Teams/Team'))\n// const Profile = lazy(() => import('./views/Profile'))\n// const TradingCompetition = lazy(() => import('./views/TradingCompetition'))\n// const Predictions = lazy(() => import('./views/Predictions'))\n// const Voting = lazy(() => import('./views/Voting'))\n// const Proposal = lazy(() => import('./views/Voting/Proposal'))\n// const CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n            <Farms />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route> */}\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.dogeson,\n    earningToken: tokens.dogeson,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 202,\n    stakingToken: tokens.minidoge,\n    earningToken: tokens.minidoge,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: tokens.babydoge,\n    earningToken: tokens.babydoge,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  // {\n  //   sousId: 200,\n  //   stakingToken: tokens.axs,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00992',\n  // },\n  // {\n  //   sousId: 199,\n  //   stakingToken: tokens.bnb,\n  //   earningToken: tokens.bnb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.02696',\n  // },\n  // {\n  //   sousId: 198,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.trx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '9.6643',\n  // },\n  // {\n  //   sousId: 197,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.chess,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4286',\n  // },\n  // {\n  //   sousId: 196,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.titan,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08912',\n  // },\n  // {\n  //   sousId: 195,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.harmony,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.0092',\n  // },\n  // {\n  //   sousId: 194,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mask,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.06423',\n  // },\n  // {\n  //   sousId: 193,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dvi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.7233',\n  // },\n  // {\n  //   sousId: 192,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.gum,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.67129',\n  // },\n  // {\n  //   sousId: 191,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.adx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.7523',\n  // },\n  // {\n  //   sousId: 190,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.suter,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '69.9074',\n  // },\n  // {\n  //   sousId: 189,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bscpad,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3877',\n  // },\n  // {\n  //   sousId: 188,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.rabbit,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.993',\n  // },\n  // {\n  //   sousId: 187,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.waultx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '7.9108',\n  // },\n  // {\n  //   sousId: 186,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.wex,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '11.574',\n  // },\n  // {\n  //   sousId: 185,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.form,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.4467',\n  // },\n  // {\n  //   sousId: 184,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.orbs,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.8946',\n  // },\n  // {\n  //   sousId: 183,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.$dg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa07a91da6d10173f33c294803684bceede325957',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00135',\n  // },\n  // {\n  //   sousId: 182,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.woo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3854',\n  // },\n  // {\n  //   sousId: 181,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.woo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0003854',\n  // },\n  // {\n  //   sousId: 180,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.htb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '5.2083',\n  // },\n  // {\n  //   sousId: 179,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.jgn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1001',\n  // },\n  // {\n  //   sousId: 178,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dft,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 177,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hai,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.3078',\n  // },\n  // {\n  //   sousId: 176,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.o3,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.107638',\n  // },\n  // {\n  //   sousId: 175,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ampl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.398',\n  // },\n  // {\n  //   sousId: 174,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4843',\n  // },\n  // {\n  //   sousId: 173,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6741',\n  // },\n  // {\n  //   sousId: 172,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.marsh,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1108',\n  // },\n  // {\n  //   sousId: 171,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mbox,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4803',\n  // },\n  // {\n  //   sousId: 170,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ata,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 169,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.27777',\n  // },\n  // {\n  //   sousId: 168,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bcfx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6944',\n  // },\n  // {\n  //   sousId: 167,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.qkc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '15.9143',\n  // },\n  // {\n  //   sousId: 166,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ktn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01215',\n  // },\n  // {\n  //   sousId: 165,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mtrg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.05613',\n  // },\n  // {\n  //   sousId: 164,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tusd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.5787',\n  // },\n  // {\n  //   sousId: 163,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.vrt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '40.5092',\n  // },\n  // {\n  //   sousId: 162,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.kalm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0868',\n  // },\n  // {\n  //   sousId: 161,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ez,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01736',\n  // },\n  // {\n  //   sousId: 160,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.kalm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenPerBlock: '0.00868',\n  // },\n  // {\n  //   sousId: 159,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.popen,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.19097',\n  // },\n  // {\n  //   sousId: 158,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.023148',\n  // },\n  // {\n  //   sousId: 157,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.well,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2025',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 156,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.deri,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '1.6087',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 155,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.chr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '1.655',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 154,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cyc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD714738837944C3c592477249E8edB724A76e068',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00015914',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 153,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xend,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.31828',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 152,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hget,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.03553',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 151,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hotcross,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 150,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.rfox,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 149,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.wmass,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.24942',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 148,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ubxt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.4074',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 147,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.btr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.8935',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 146,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.τdoge,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.868',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 145,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pmon,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01261',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 144,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.one,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '57.87',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 143,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.fine,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1342',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 142,\n  //   stakingToken: tokens.doge,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01388',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 141,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bmxx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01331',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 140,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oin,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 139,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hyfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.8935',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 138,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.kun,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.23148',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 137,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.math,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.15798',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 136,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ust,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.17361',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 135,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.win,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '462.96',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 134,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.trx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '4.0509',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 133,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.btt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '79.86',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 132,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lmt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.66145',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 131,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pnt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.09548',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 130,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xmark,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0298',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 129,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4861',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 128,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hakka,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 127,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000031',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 126,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.003472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 125,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bbadger,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00265278',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 124,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bdigg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000403',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 123,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4629',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 122,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xed,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 121,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cgg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.10918',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 120,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.perl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 119,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.arpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.949',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 118,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.11284',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 117,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dexe,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.009837',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 116,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dfd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.46296',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 115,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.alpaca,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.22743',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 114,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.τbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000608',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 113,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.τbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000608',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 112,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swingby,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.21527',\n  // },\n  // {\n  //   sousId: 111,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xed,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 110,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hakka,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 109,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cgg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.10918',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 108,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mix,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3721',\n  // },\n  // {\n  //   sousId: 107,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.suter,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '15.3356',\n  // },\n  // {\n  //   sousId: 106,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.broobee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '14.4675',\n  // },\n  // {\n  //   sousId: 105,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hzn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6944',\n  // },\n  // {\n  //   sousId: 104,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.alpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.23495',\n  // },\n  // {\n  //   sousId: 103,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.perl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 102,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tlm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '17.361',\n  // },\n  // {\n  //   sousId: 101,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.jgn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08796',\n  // },\n  // {\n  //   sousId: 100,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.eps,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.07716',\n  // },\n  // {\n  //   sousId: 99,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.arpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.949',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 98,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.itam,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.096',\n  // },\n  // {\n  //   sousId: 97,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1329ad151dE6C441184E32E108401126AE850937',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4629',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 96,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tko,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  // },\n  // {\n  //   sousId: 95,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.apys,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x46530d79b238f809e80313e73715b160c66677aF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.09953',\n  // },\n  // {\n  //   sousId: 94,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hoo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.489',\n  // },\n  // {\n  //   sousId: 93,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.11284',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 92,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.easy,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0072338',\n  // },\n  // {\n  //   sousId: 91,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nrv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.15046',\n  // },\n  // {\n  //   sousId: 90,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dego,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00405',\n  // },\n  // {\n  //   sousId: 89,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.gum,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08912',\n  // },\n  // {\n  //   sousId: 88,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000031',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 87,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dft,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6811',\n  // },\n  // {\n  //   sousId: 86,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swth,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.3148',\n  // },\n  // {\n  //   sousId: 85,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.003472',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 84,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.zil,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.0995',\n  // },\n  // {\n  //   sousId: 83,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pcws,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00434',\n  // },\n  // {\n  //   sousId: 82,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bbadger,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00265278',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 81,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bdigg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000403',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 80,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lto,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.2893',\n  // },\n  // {\n  //   sousId: 79,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mir,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01273',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 78,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.mir,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01273',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 77,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.trade,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4484',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 76,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dusk,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4629',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 75,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bifi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00007234',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 74,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.txl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.434027',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 73,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cos,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF682D186168b4114ffDbF1291F19429310727151',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '5.787',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 72,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bunny,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00289',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 71,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.alice,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.14467',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 70,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.for,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '2.8935',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 69,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bux,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5787',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 68,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nuls,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0868',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 67,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.belt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00868',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 66,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4861',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 65,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0001157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 64,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dexe,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.009837',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 63,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bel,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0549',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 62,\n  //   stakingToken: tokens.tpt,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0462',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 61,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.tpt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '3.616',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 60,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.watch,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.3472',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 59,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.xmark,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0413',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 58,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bmxx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 57,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.iotx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '6.365',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 56,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bor,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.000395',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 55,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bopen,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0723',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 54,\n  //   stakingToken: tokens.sushi,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0367',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 53,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.dodo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0578',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 52,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swingby,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.13',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 51,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bry,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 50,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.zee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1736',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 49,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.swgb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.899',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 48,\n  //   stakingToken: tokens.comp,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.055',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 47,\n  //   stakingToken: tokens.comp,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.55',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 46,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.sfp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.6',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 45,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lina,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 44,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lina,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 43,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.lit,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.231',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 42,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hget,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0138',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 41,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bdo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.075',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 40,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.egld,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.001215',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 39,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ust,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 38,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.wsote,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.23',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 37,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.front,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2546',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 36,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.helmet,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.81',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 35,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.btcst,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.011574',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 34,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bscx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.17361',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 33,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ten,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.05787',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 32,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.balbt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4166',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 31,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.asr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 30,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.atm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 29,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.og,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 28,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.reef,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '115.74',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 27,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ditto,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 26,\n  //   stakingToken: tokens.twt,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 24,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.juv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 25,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.psg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 21,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.vai,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.104',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  //  {\n  //   sousId: 20,\n  //   stakingToken: tokens.bnb,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n  //   },\n  //   poolCategory: PoolCategory.BINANCE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  //  {\n  //   sousId: 19,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.bnb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0041',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 18,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.blink,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 17,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.blink,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 16,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.unfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02893',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 15,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.twt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 14,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.hard,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.346',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 13,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.broobee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '12.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 12,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.stax,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 11,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nar,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '1',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 10,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.nya,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '10',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 9,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.ctk,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 8,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.twt,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 7,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.inj,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.25',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n"],"sourceRoot":""}